/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\model-iface\transaction-instrumentation.h>
%}

import "simics/base/conf-object.dml";
import "simics/base/transaction.dml";
import "simics/pywrap.dml";

extern typedef struct { } transaction_cb_handle_t;
extern typedef struct { map_target_t const *mt; exception_type_t ex; uint64 addr; } next_map_t;
extern typedef struct { void (*remove_callback)(conf_object_t *obj, transaction_cb_handle_t *handle); void (*enable_callback)(conf_object_t *obj, transaction_cb_handle_t *handle); void (*disable_callback)(conf_object_t *obj, transaction_cb_handle_t *handle); transaction_cb_handle_t *(*register_issue_cb)(conf_object_t *obj, conf_object_t *conn_obj, transaction_issue_cb_t cb, lang_void *data); } transaction_subscribe_interface_t;
extern typedef next_map_t (*do_map_target_cb_t)(map_target_t const *mt, transaction_t *org_t, uint64 addr, map_info_t *map, lang_void *handle);
extern typedef next_map_t (*transaction_issue_cb_t)(conf_object_t *obj, map_target_t const *mt, char const *map_target_type, map_info_t *map, transaction_t *t, uint64 offset, do_map_target_cb_t do_mt, lang_void *handle, lang_void *user_data);
