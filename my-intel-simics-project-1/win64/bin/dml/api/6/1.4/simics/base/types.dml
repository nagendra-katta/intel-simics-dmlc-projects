/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\base\types.h>
%}

import "simics/base-types.dml";

extern bytes_t buffer_bytes(buffer_t buf);
extern typedef struct { int integer; char *string; } tuple_int_string_t;
extern typedef struct { size_t len; uint8 *str; } byte_string_t;
extern typedef struct { uint8 *data; size_t len; } buffer_t;
extern typedef struct { uint8 const *data; size_t len; } bytes_t;
extern typedef struct { uint32 c; } atomic_counter_t;
extern typedef struct { } conf_class_t;
extern typedef uint64 generic_address_t;
extern typedef void lang_void;
extern typedef uint64 linear_address_t;
extern typedef uint64 logical_address_t;
extern typedef uint64 physical_address_t;
