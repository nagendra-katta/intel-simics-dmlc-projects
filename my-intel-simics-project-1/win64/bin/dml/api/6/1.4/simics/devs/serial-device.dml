/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\devs\serial-device.h>
%}

import "simics/base/types.dml";
import "simics/pywrap.dml";

extern typedef int stop_bits_t;
constant Stop_Bits_1 = 0;
constant Stop_Bits_1p5 = 1;
constant Stop_Bits_2 = 2;
extern typedef int parity_mode_t;
constant Parity_None = 0;
constant Parity_Even = 1;
constant Parity_Odd = 2;
extern typedef struct { int (*write)(conf_object_t *obj, int value); void (*receive_ready)(conf_object_t *obj); } serial_device_interface_t;
extern typedef struct { void (*write_at)(conf_object_t *obj, int value, int x, int y, int fg, int bg); void (*graphics_mode)(conf_object_t *obj, int in_graphics_mode); } extended_serial_interface_t;
extern typedef struct { void (*cts)(conf_object_t *obj, int status); void (*dsr)(conf_object_t *obj, int status); void (*ring)(conf_object_t *obj, int status); void (*carrier)(conf_object_t *obj, int status); void (*got_break)(conf_object_t *obj); void (*got_frame_error)(conf_object_t *obj); } rs232_device_interface_t;
extern typedef struct { void (*set_baudrate)(conf_object_t *obj, int rate, int commit); void (*set_data_bits)(conf_object_t *obj, int bits, int commit); void (*set_stop_bits)(conf_object_t *obj, stop_bits_t stop_bits, int commit); void (*set_parity_mode)(conf_object_t *obj, parity_mode_t parity_mode, int commit); void (*set_dtr)(conf_object_t *obj, int status); void (*set_rts)(conf_object_t *obj, int status); void (*set_break)(conf_object_t *obj, int status); } rs232_console_interface_t;
