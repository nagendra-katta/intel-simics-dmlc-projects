/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\model-iface\concurrency.h>
%}

import "simics/base/types.dml";
import "simics/pywrap.dml";
import "simics/base/attr-value.dml";

extern void VT_update_thread_domain_assignments(void);
extern typedef int concurrency_mode_t;
constant Sim_Concurrency_Mode_Serialized = 1;
constant Sim_Concurrency_Mode_Serialized_Memory = 2;
constant Sim_Concurrency_Mode_Full = 4;
extern typedef struct { concurrency_mode_t (*supported_modes)(conf_object_t *obj); concurrency_mode_t (*current_mode)(conf_object_t *obj); void (*switch_mode)(conf_object_t *obj, concurrency_mode_t mode); } concurrency_mode_interface_t;
extern typedef struct { attr_value_t (*serialized_memory_group)(conf_object_t *obj, uint32 group_index); attr_value_t (*execution_group)(conf_object_t *obj, uint32 group_index); } concurrency_group_interface_t;
