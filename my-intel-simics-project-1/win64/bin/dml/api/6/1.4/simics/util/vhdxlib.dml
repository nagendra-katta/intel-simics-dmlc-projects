/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\util\vhdxlib.h>
%}

import "simics/base-types.dml";
import "simics/util/help-macros.dml";
import "simics/util/crafflib.dml";

extern int vhdx_close(vhdx_file_t *file);
extern vhdx_file_t *vhdx_creat(char const *fname, uint64 size, craff_error_t *ce, vhdx_params_t *params);
extern char const *vhdx_file_error_message(vhdx_file_t *file);
extern void vhdx_get_info(vhdx_file_t *file, vhdx_info_t *info, size_t info_size);
extern char *vhdx_muuid_to_str(vhdx_muuid_t vhdx_muuid);
extern vhdx_file_t *vhdx_open(char const *fname, bool writable, craff_error_t *ce);
extern int vhdx_read(vhdx_file_t *file, void *buf, uint64 ofs, size_t len, craff_interv_vec_t *gaps);
extern uint64 vhdx_virtual_disk_size(vhdx_file_t *file);
extern int vhdx_write(vhdx_file_t *file, void const *buf, uint64 ofs, size_t len);
extern typedef struct { } vhdx_file_t;
extern typedef struct { uint32 d1; uint16 d2; uint16 d3; uint8 d4[8]; } vhdx_muuid_t;
extern typedef struct { char creator[512]; uint64 size; uint32 logical_sector_size; uint32 physical_sector_size; vhdx_muuid_t virtual_disk_id; vhdx_muuid_t file_write_guid; vhdx_muuid_t data_write_guid; uint16 version; bool has_parent; uint32 block_size; } vhdx_info_t;
extern typedef struct { } vhdx_params_t;
