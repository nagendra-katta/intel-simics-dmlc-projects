/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

header %{
#include <simics\util\genrand.h>
%}

import "simics/base-types.dml";
import "simics/base/types.dml";

extern void genrand_destroy(rand_state_t *rs);
extern double genrand_double(rand_state_t *rs);
extern rand_state_t *genrand_init(uint32 s);
extern rand_state_t *genrand_init_array(uint32 *init_key, uint32 key_length);
extern uint64 genrand_range(rand_state_t *rs, uint64 max);
extern bool genrand_restore(rand_state_t *rs, bytes_t serialization);
extern bytes_t genrand_serialization(rand_state_t const *rs);
extern uint32 genrand_uint32(rand_state_t *rs);
extern uint64 genrand_uint64(rand_state_t *rs);
extern typedef struct { } rand_state_t;
