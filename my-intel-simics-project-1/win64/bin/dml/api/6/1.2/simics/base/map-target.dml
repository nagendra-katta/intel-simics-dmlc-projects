/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

header %{
#include <simics\base\map-target.h>
%}

import "simics/base/memory.dml";
import "simics/base/direct-memory.dml";
import "simics/base/memory-transaction.dml";
import "simics/pywrap.dml";

extern void SIM_free_map_target(map_target_t *mt);
extern bool SIM_map_target_flush(map_target_t const *mt, uint64 base, uint64 size, access_t access);
extern conf_object_t *SIM_map_target_object(map_target_t const *mt);
extern char const *SIM_map_target_port(map_target_t const *mt);
extern map_target_t const *SIM_map_target_target(map_target_t const *mt);
extern map_target_t *SIM_new_map_target(conf_object_t *obj, char const *port, map_target_t const *chained_target);
extern exception_type_t VT_map_target_access(map_target_t const *mt, generic_transaction_t *mop);
extern direct_memory_lookup_t VT_map_target_dm_lookup(map_target_t const *mt, conf_object_t *requester, physical_address_t addr, uint64 size, access_t access);
extern typedef struct { } map_target_t;
