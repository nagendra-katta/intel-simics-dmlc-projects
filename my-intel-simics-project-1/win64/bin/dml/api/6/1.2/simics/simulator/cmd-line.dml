/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

header %{
#include <simics\simulator\cmd-line.h>
%}

import "simics/base/types.dml";
import "simics/pywrap.dml";

extern cmd_line_id_t VT_command_line_create(conf_object_t *obj, bool interactive, bool primary);
extern void VT_command_line_delete(cmd_line_id_t id);
extern void VT_command_line_key(cmd_line_id_t id, cmd_line_mod_t mod, cmd_line_key_t key);
extern void VT_command_line_new_position(cmd_line_id_t id, int pos);
extern void VT_command_line_new_selection(cmd_line_id_t id, int left, int right);
extern void VT_command_line_set_size(cmd_line_id_t, int cols, int rows);
extern void VT_command_line_to_clipboard(cmd_line_id_t id, char const *str);
extern void VT_set_prompt_customizer(prompt_customizer_t cb);
extern typedef int cmd_line_key_t;
constant Cmd_Line_Key_Left = 0;
constant Cmd_Line_Key_Right = 1;
constant Cmd_Line_Key_Up = 2;
constant Cmd_Line_Key_Down = 3;
constant Cmd_Line_Key_PgUp = 4;
constant Cmd_Line_Key_PgDn = 5;
constant Cmd_Line_Key_Home = 6;
constant Cmd_Line_Key_End = 7;
constant Cmd_Line_Key_Back = 8;
constant Cmd_Line_Key_Tab = 9;
constant Cmd_Line_Key_Enter = 10;
constant Cmd_Line_Key_Del = 11;
constant Cmd_Line_Key_Ins = 12;
constant Cmd_Line_Key_F1 = 13;
constant Cmd_Line_Key_F2 = 14;
constant Cmd_Line_Key_F3 = 15;
constant Cmd_Line_Key_F4 = 16;
constant Cmd_Line_Key_F5 = 17;
constant Cmd_Line_Key_F6 = 18;
constant Cmd_Line_Key_F7 = 19;
constant Cmd_Line_Key_F8 = 20;
constant Cmd_Line_Key_F9 = 21;
constant Cmd_Line_Key_F10 = 22;
constant Cmd_Line_Key_F11 = 23;
constant Cmd_Line_Key_F12 = 24;
extern typedef int cmd_line_mod_t;
constant Cmd_Line_Mod_None = 0;
constant Cmd_Line_Mod_Shift = 1;
constant Cmd_Line_Mod_Ctrl = 2;
constant Cmd_Line_Mod_Alt = 4;
extern typedef struct { void (*write)(conf_object_t *obj, char const *str); void (*delete_line)(conf_object_t *obj); void (*disconnect)(conf_object_t *obj); void (*cursor_left)(conf_object_t *obj, int num); void (*cursor_right)(conf_object_t *obj, int num); void (*clear_screen)(conf_object_t *obj); void (*prompt_end)(conf_object_t *obj, int pos); void (*bell)(conf_object_t *obj); } cmd_line_frontend_interface_t;
extern typedef struct { void (*new_selection)(conf_object_t *obj, int x, int y); void (*to_clipboard)(conf_object_t *obj, char const *str); } cmd_line_selection_interface_t;
extern typedef struct { void (*write)(conf_object_t *obj, char const *str); void (*set_size)(conf_object_t *obj, int left, int right); void (*disconnect)(conf_object_t *obj); } terminal_server_interface_t;
extern typedef struct { void (*write)(conf_object_t *obj, int id, char const *str); void (*disconnect)(conf_object_t *obj, int id); } terminal_client_interface_t;
extern typedef int cmd_line_id_t;
extern typedef char *(*prompt_customizer_t)(char const *);
