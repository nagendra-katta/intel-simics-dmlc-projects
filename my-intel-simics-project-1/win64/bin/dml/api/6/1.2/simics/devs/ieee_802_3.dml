/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

header %{
#include <simics\devs\ieee_802_3.h>
%}

import "simics/base/types.dml";
import "simics/pywrap.dml";
import "simics/util/frags.dml";
import "simics/util/dbuffer.dml";

extern typedef int ieee_802_3_media_t;
constant IEEE_no_media = 0;
constant IEEE_media_unknown = 1;
constant IEEE_10base2 = 2;
constant IEEE_10base5 = 3;
constant IEEE_10baseF = 4;
constant IEEE_10baseT = 5;
constant IEEE_100baseFX = 6;
constant IEEE_100baseT = 7;
constant IEEE_100baseT2 = 8;
constant IEEE_100baseT4 = 9;
constant IEEE_100baseTX = 10;
constant IEEE_100baseX = 11;
constant IEEE_1000baseX = 12;
constant IEEE_1000baseCX = 13;
constant IEEE_1000baseLX = 14;
constant IEEE_1000baseSX = 15;
constant IEEE_1000baseT = 16;
constant IEEE_10broad36 = 17;
constant IEEE_1base5 = 18;
extern typedef int ieee_802_3_duplex_mode_t;
constant IEEE_half_duplex = 0;
constant IEEE_full_duplex = 1;
extern typedef int ieee_802_3_link_status_t;
constant IEEE_link_unconnected = 0;
constant IEEE_link_down = 1;
constant IEEE_link_up = 2;
extern typedef struct { int (*send_frame)(conf_object_t *obj, dbuffer_t *buf, int replace_crc); int (*check_tx_bandwidth)(conf_object_t *obj); void (*add_mac)(conf_object_t *obj, uint8 const *mac); void (*del_mac)(conf_object_t *obj, uint8 const *mac); void (*add_mac_mask)(conf_object_t *obj, uint8 const *mac, uint8 const *mask); void (*del_mac_mask)(conf_object_t *obj, uint8 const *mac, uint8 const *mask); void (*set_promiscous_mode)(conf_object_t *obj, int enable); } ieee_802_3_phy_interface_t;
extern typedef struct { int (*send_frame)(conf_object_t *obj, dbuffer_t *buf, int replace_crc); int (*check_tx_bandwidth)(conf_object_t *obj); void (*add_mac)(conf_object_t *obj, byte_string_t mac); void (*del_mac)(conf_object_t *obj, byte_string_t mac); void (*add_mac_mask)(conf_object_t *obj, byte_string_t mac, byte_string_t mask); void (*del_mac_mask)(conf_object_t *obj, byte_string_t mac, byte_string_t mask); void (*set_promiscous_mode)(conf_object_t *obj, int enable); } ieee_802_3_phy_v2_interface_t;
extern typedef struct { int (*send_frame)(conf_object_t *obj, frags_t const *frame, int replace_crc); int (*check_tx_bandwidth)(conf_object_t *obj); } ieee_802_3_phy_v3_interface_t;
extern typedef struct { int (*receive_frame)(conf_object_t *obj, int phy, dbuffer_t *buf, int crc_ok); void (*tx_bandwidth_available)(conf_object_t *obj, int phy); void (*link_status_changed)(conf_object_t *obj, int phy, ieee_802_3_link_status_t status); } ieee_802_3_mac_interface_t;
extern typedef struct { void (*receive_frame)(conf_object_t *obj, int phy, frags_t const *frame, int crc_ok); void (*tx_bandwidth_available)(conf_object_t *obj, int phy); void (*link_status_changed)(conf_object_t *obj, int phy, ieee_802_3_link_status_t status); } ieee_802_3_mac_v3_interface_t;
