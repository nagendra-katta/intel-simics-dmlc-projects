/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\simulator\control.h>
%}

import "simics/base/types.dml";
import "simics/base/time.dml";
import "simics/processor/time.dml";
import "simics/pywrap.dml";
import "simics/simulator/oec-control.dml";

extern void SIM_break_cycle(conf_object_t *obj, int64 cycles);
extern void SIM_break_message(char const *msg);
extern void SIM_break_simulation(char const *msg);
extern void SIM_break_step(conf_object_t *obj, int64 steps);
extern pc_step_t SIM_continue(int64 steps);
extern void SIM_quit(int exit_code);
extern void SIM_shutdown(void);
extern bool SIM_simics_is_running(void);
extern void VT_abort_error(conf_object_t *obj, char const *msg);
extern void VT_abort_user(char const *msg);
extern void VT_activate_executor(execute_environ_t *ec, conf_object_t *obj);
extern execute_environ_t *VT_create_execute_environ(void);
extern bool VT_execute(execute_environ_t *ec);
extern void VT_free_execute_environ(execute_environ_t *env);
extern char const *VT_get_break_message(void);
extern attr_value_t VT_get_stop_reasons(void);
extern stop_type_t VT_get_stop_type(void);
extern bool VT_in_main_branch(void);
extern bool VT_inside_instruction(void);
extern int VT_process_work(int *done);
extern void VT_set_execute_environ(conf_object_t *obj, execute_environ_t *env);
extern void VT_stop_error(conf_object_t *obj, char const *msg);
extern void VT_stop_execution(execute_environ_t *env);
extern void VT_stop_finished(char const *msg);
extern void VT_stop_message(conf_object_t *obj, char const *msg);
extern void VT_stop_user(char const *msg);
extern void VT_thread_cell_association_begin(conf_object_t *obj);
extern void VT_thread_cell_association_end(conf_object_t *obj);
extern void VT_user_interrupt(char const *msg, int break_script);
extern void VT_wait_for_simulator_init(void);
extern typedef int stop_type_t;
constant Sim_Stop_Stopped = 0;
constant Sim_Stop_Aborted = 1;
extern typedef struct { attr_value_t (*start_channel)(conf_object_t *obj, char const *url); } tcf_channel_interface_t;
extern typedef struct { } execute_environ_t;
