/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\devs\ethernet.h>
%}

import "simics/util/dbuffer.dml";
import "simics/util/frags.dml";
import "simics/base/time.dml";
import "simics/pywrap.dml";

extern typedef int eth_frame_crc_status_t;
constant Eth_Frame_CRC_Match = 0;
constant Eth_Frame_CRC_Mismatch = 1;
constant Eth_Frame_CRC_Unknown = 2;
extern typedef struct { void (*frame)(conf_object_t *obj, frags_t const *frame, eth_frame_crc_status_t crc_status); } ethernet_common_interface_t;
extern typedef struct { void (*link_status)(conf_object_t *ep, bool link_up); } ethernet_cable_interface_t;
extern typedef struct { conf_object_t *(*attach)(conf_object_t *link, conf_object_t *clock, ethernet_link_snoop_t snoop_fun, lang_void *user_data); } ethernet_snoop_interface_t;
extern typedef struct { conf_object_t *(*attach)(conf_object_t *link, conf_object_t *clock, ethernet_link_snoop_t snoop_fun, lang_void *user_data, uint16 vlan_id, bool is_vlan_trunk); } ethernet_vlan_snoop_interface_t;
extern typedef struct { int64 (*add)(conf_object_t *obj, bytes_t src_mac_addr, bytes_t dst_mac_addr, int ether_type, break_net_cb_t cb, bool once, int64 bp_id); void (*remove)(conf_object_t *obj, int64 bp_id); } network_breakpoint_interface_t;
extern typedef int (*break_net_cb_t)(conf_object_t *obj, bytes_t data, int len, int64 break_id);
extern typedef void (*ethernet_link_snoop_t)(lang_void *user_data, conf_object_t *clock, frags_t const *packet, eth_frame_crc_status_t crc_status);
