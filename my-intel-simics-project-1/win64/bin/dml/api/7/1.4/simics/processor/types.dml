/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\processor\types.h>
%}

import "simics/base/types.dml";

extern typedef int data_or_instr_t;
constant Sim_DI_Instruction = 0;
constant Sim_DI_Data = 1;
extern typedef int access_t;
constant Sim_Access_Read = 1;
constant Sim_Access_Write = 2;
constant Sim_Access_Execute = 4;
extern typedef int processor_mode_t;
constant Sim_CPU_Mode_User = 0;
constant Sim_CPU_Mode_Supervisor = 1;
constant Sim_CPU_Mode_Hypervisor = 2;
extern typedef int cpu_endian_t;
constant Sim_Endian_Little = 0;
constant Sim_Endian_Big = 1;
extern typedef struct { int valid; physical_address_t address; physical_address_t block_start; physical_address_t block_end; } physical_block_t;
