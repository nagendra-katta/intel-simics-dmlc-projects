/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\base\global-notifier.h>
%}

import "simics/base/types.dml";
import "simics/base/conf-object.dml";

extern global_notifier_callback_t *SIM_add_global_notifier(global_notifier_type_t what, conf_object_t *subscriber, void (*callback)(conf_object_t *subscriber, lang_void *data), lang_void *data);
extern global_notifier_callback_t *SIM_add_global_notifier_once(global_notifier_type_t what, conf_object_t *subscriber, void (*callback)(conf_object_t *subscriber, lang_void *data), lang_void *data);
extern void SIM_delete_global_notifier(global_notifier_callback_t *handle);
extern typedef int global_notifier_type_t;
constant Sim_Global_Notify_Object_Delete = 100;
constant Sim_Global_Notify_Objects_Finalized = 101;
constant Sim_Global_Notify_Message = 102;
constant Sim_Global_Notify_Before_Snapshot_Restore = 150;
constant Sim_Global_Notify_After_Snapshot_Restore = 151;
extern typedef struct { } global_notifier_callback_t;
