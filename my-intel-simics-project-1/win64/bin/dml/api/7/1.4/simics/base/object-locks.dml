/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\base\object-locks.h>
%}

import "simics/base/types.dml";

extern domain_lock_t *SIM_acquire_cell(conf_object_t *obj, char const *function_name, char const *source_location);
extern domain_lock_t *SIM_acquire_object(conf_object_t *obj, char const *function_name, char const *source_location);
extern domain_lock_t *SIM_acquire_object_for_execution(conf_object_t *obj);
extern domain_lock_t *SIM_acquire_target(conf_object_t *obj, char const *function_name, char const *source_location);
extern domain_lock_t *SIM_drop_thread_domains(void);
extern void SIM_reacquire_thread_domains(domain_lock_t *lock);
extern void SIM_release_cell(conf_object_t *obj, domain_lock_t *lock);
extern void SIM_release_object(conf_object_t *obj, domain_lock_t *lock);
extern void SIM_release_target(conf_object_t *obj, domain_lock_t *lock);
extern void SIM_yield_thread_domains(void);
extern domain_lock_t *VT_acquire_cell(conf_object_t *obj, char const *function_name, char const *source_location);
extern domain_lock_t *VT_acquire_object(conf_object_t *obj, char const *function_name, char const *source_location);
extern domain_lock_t *VT_acquire_target(conf_object_t *obj, char const *func, char const *location);
extern void VT_assert_cell_context(conf_object_t *obj, char const *file, char const *func);
extern void VT_assert_object_lock(conf_object_t *obj, char const *func, char const *line);
extern void VT_release_cell(conf_object_t *obj, domain_lock_t *lock);
extern void VT_release_object(conf_object_t *obj, domain_lock_t *lock);
extern void VT_release_target(conf_object_t *obj, domain_lock_t *lock);
extern typedef struct { } domain_lock_t;
