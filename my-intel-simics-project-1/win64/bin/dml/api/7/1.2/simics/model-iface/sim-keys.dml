/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

header %{
#include <simics\model-iface\sim-keys.h>
%}

extern typedef int sim_key_t;
constant SK_ILLEGAL = 0;
constant SK_ESC = 1;
constant SK_F1 = 2;
constant SK_F2 = 3;
constant SK_F3 = 4;
constant SK_F4 = 5;
constant SK_F5 = 6;
constant SK_F6 = 7;
constant SK_F7 = 8;
constant SK_F8 = 9;
constant SK_F9 = 10;
constant SK_F10 = 11;
constant SK_F11 = 12;
constant SK_F12 = 13;
constant SK_PRNT_SCRN = 14;
constant SK_SCROLL_LOCK = 15;
constant SK_NUM_LOCK = 16;
constant SK_CAPS_LOCK = 17;
constant SK_0 = 18;
constant SK_1 = 19;
constant SK_2 = 20;
constant SK_3 = 21;
constant SK_4 = 22;
constant SK_5 = 23;
constant SK_6 = 24;
constant SK_7 = 25;
constant SK_8 = 26;
constant SK_9 = 27;
constant SK_A = 28;
constant SK_B = 29;
constant SK_C = 30;
constant SK_D = 31;
constant SK_E = 32;
constant SK_F = 33;
constant SK_G = 34;
constant SK_H = 35;
constant SK_I = 36;
constant SK_J = 37;
constant SK_K = 38;
constant SK_L = 39;
constant SK_M = 40;
constant SK_N = 41;
constant SK_O = 42;
constant SK_P = 43;
constant SK_Q = 44;
constant SK_R = 45;
constant SK_S = 46;
constant SK_T = 47;
constant SK_U = 48;
constant SK_V = 49;
constant SK_W = 50;
constant SK_X = 51;
constant SK_Y = 52;
constant SK_Z = 53;
constant SK_APOSTROPHE = 54;
constant SK_COMMA = 55;
constant SK_PERIOD = 56;
constant SK_SEMICOLON = 57;
constant SK_EQUAL = 58;
constant SK_SLASH = 59;
constant SK_BACKSLASH = 60;
constant SK_SPACE = 61;
constant SK_LEFT_BRACKET = 62;
constant SK_RIGHT_BRACKET = 63;
constant SK_MINUS = 64;
constant SK_GRAVE = 65;
constant SK_TAB = 66;
constant SK_ENTER = 67;
constant SK_BACKSPACE = 68;
constant SK_CTRL_L = 69;
constant SK_CTRL_R = 70;
constant SK_SHIFT_L = 71;
constant SK_SHIFT_R = 72;
constant SK_ALT_L = 73;
constant SK_ALT_R = 74;
constant SK_GR_DIVIDE = 75;
constant SK_GR_MULTIPLY = 76;
constant SK_GR_MINUS = 77;
constant SK_GR_PLUS = 78;
constant SK_GR_ENTER = 79;
constant SK_GR_INSERT = 80;
constant SK_GR_HOME = 81;
constant SK_GR_PG_UP = 82;
constant SK_GR_DELETE = 83;
constant SK_GR_END = 84;
constant SK_GR_PG_DOWN = 85;
constant SK_GR_UP = 86;
constant SK_GR_DOWN = 87;
constant SK_GR_LEFT = 88;
constant SK_GR_RIGHT = 89;
constant SK_KP_HOME = 90;
constant SK_KP_UP = 91;
constant SK_KP_PG_UP = 92;
constant SK_KP_LEFT = 93;
constant SK_KP_CENTER = 94;
constant SK_KP_RIGHT = 95;
constant SK_KP_END = 96;
constant SK_KP_DOWN = 97;
constant SK_KP_PG_DOWN = 98;
constant SK_KP_INSERT = 99;
constant SK_KP_DELETE = 100;
constant SK_PAUSE = 101;
constant SK_LEFT_WIN = 102;
constant SK_RIGHT_WIN = 103;
constant SK_LIST_BIT = 104;
constant SK_KEYB = 105;
constant SK_BREAK = 106;
constant SK_SYSREQ = 107;
constant SK_SUN_STOP = 108;
constant SK_SUN_AGAIN = 109;
constant SK_SUN_PROPS = 110;
constant SK_SUN_UNDO = 111;
constant SK_SUN_FRONT = 112;
constant SK_SUN_COPY = 113;
constant SK_SUN_OPEN = 114;
constant SK_SUN_PASTE = 115;
constant SK_SUN_FIND = 116;
constant SK_SUN_CUT = 117;
constant SK_SUN_HELP = 118;
constant SK_SUN_COMPOSE = 119;
constant SK_SUN_META_L = 120;
constant SK_SUN_META_R = 121;
constant SK_SUN_POWER = 122;
constant SK_SUN_AUDIO_D = 123;
constant SK_SUN_AUDIO_U = 124;
constant SK_SUN_AUDIO_M = 125;
constant SK_SUN_EMPTY = 126;
