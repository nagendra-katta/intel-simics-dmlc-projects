/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

header %{
#include <simics\base\memory.h>
%}

import "simics/base/types.dml";

extern char const *SIM_describe_pseudo_exception(exception_type_t ex);
extern void SIM_translation_changed(conf_object_t *obj);
extern typedef int addr_space_t;
constant Sim_Addr_Space_Conf = 0;
constant Sim_Addr_Space_IO = 1;
constant Sim_Addr_Space_Memory = 2;
extern typedef int read_or_write_t;
constant Sim_RW_Read = 0;
constant Sim_RW_Write = 1;
extern typedef int endianness_t;
constant Sim_Endian_Target = 0;
constant Sim_Endian_Host_From_BE = 1;
constant Sim_Endian_Host_From_LE = 2;
extern typedef int swap_mode_t;
constant Sim_Swap_None = 0;
constant Sim_Swap_Bus = 1;
constant Sim_Swap_Bus_Trans = 2;
constant Sim_Swap_Trans = 3;
extern typedef int map_type_t;
constant Sim_Map_Ram = 0;
constant Sim_Map_Rom = 1;
constant Sim_Map_IO = 2;
constant Sim_Map_Port = 3;
constant Sim_Map_Translate = 256;
constant Sim_Map_Translate_To_Space = 257;
constant Sim_Map_Translate_To_Ram = 258;
constant Sim_Map_Translate_To_Rom = 259;
extern typedef int exception_type_t;
constant Sim_PE_Cancelled = 1022;
constant Sim_PE_Async_Required = 1023;
constant Sim_PE_Deferred = 1024;
constant Sim_PE_No_Exception = 1025;
constant Sim_PE_Silent_Break = 1026;
constant Sim_PE_Stop_Request = 1027;
constant Sim_PE_Inquiry_Outside_Memory = 1028;
constant Sim_PE_Inquiry_Unhandled = 1029;
constant Sim_PE_Execute_Outside_Memory = 1030;
constant Sim_PE_IO_Not_Taken = 1031;
constant Sim_PE_IO_Error = 1032;
constant Sim_PE_Stall_Cpu = 1033;
constant Sim_PE_Instruction_Finished = 1034;
constant Sim_PE_Default_Semantics = 1035;
constant Sim_PE_Ignore_Semantics = 1036;
constant Sim_PE_Last = 1037;
extern typedef struct { physical_address_t base; physical_address_t start; physical_address_t length; int function; int16 priority; int align_size; swap_mode_t reverse_endian; } map_info_t;
extern typedef struct { } page_t;
extern typedef struct { map_type_t map_type; conf_object_t *object; char const *port; void const *interface_ptr; void const *target_interface; void const *breakpoint_interface; void const *breakpoint_query_v2_interface; void const *bridge_interface; conf_object_t *target_object; char const *target_port; conf_object_t *bridge; map_info_t map_info; physical_address_t map_size; int deleted; } map_list_t;
