/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

header %{
#include <simics\simulator\embed.h>
%}

import "simics/base-types.dml";

extern bool SIM_get_init_arg_boolean(char const *name, bool default_value);
extern char const *SIM_get_init_arg_string(char const *name, char const *default_value);
extern void SIM_init_command_line(void);
extern void SIM_init_environment(char **argv, bool handle_signals, bool allow_core_dumps);
extern void SIM_init_simulator2(init_arg_t *init_args);
extern void SIM_main_loop(void);
extern void SIM_set_frontend_context(void *context);
extern void VT_check_package_updates(void);
extern void VT_init_package_list(char const *package_list);
extern typedef struct { bool batch_mode; bool quiet; bool verbose; bool python_verbose; bool disable_istc; bool disable_dstc; bool module_cache_enable; bool rdp; bool sign_module; char const *log_file; char const *project; char const *package_list; bool no_windows; bool fail_on_warnings; char const *deprecation_level; bool warn_deprecated; bool no_warn_deprecated; bool warn_multithread; bool check_ifaces; bool no_global_settings; int log_enable; } init_prefs_t;
extern typedef struct { char const *name; bool boolean; struct { char const *string; bool enabled; } u; } init_arg_t;
