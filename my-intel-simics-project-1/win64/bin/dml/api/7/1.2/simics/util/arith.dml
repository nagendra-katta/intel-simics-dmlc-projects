/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

header %{
#include <simics\util\arith.h>
%}

import "simics/base-types.dml";

extern int signed_divide_128_by_64(int64 dividend_high, int64 dividend_low, int64 divisor, int64 *quotient, int64 *remainder);
extern void signed_multiply_64_by_64(uint64 a, uint64 b, uint64 *prod_h, uint64 *prod_l);
extern uint64 signed_multiply_64_by_64_high(uint64 a, uint64 b);
extern int unsigned_divide_128_by_64(uint64 dividend_high, uint64 dividend_low, uint64 divisor, uint64 *quotient, uint64 *remainder);
extern void unsigned_divide_128_by_64_nocheck(uint64 dividend_high, uint64 dividend_low, uint64 divisor, uint64 *quotient, uint64 *remainder);
extern uint64 unsigned_gcd(uint64 n, uint64 d);
extern void unsigned_multiply_64_by_64(uint64 a, uint64 b, uint64 *prod_h, uint64 *prod_l);
extern uint64 unsigned_multiply_64_by_64_high(uint64 a, uint64 b);
extern int unsigned_multiply_rational(uint64 num1, uint64 den1, uint64 num2, uint64 den2, uint64 *result_num, uint64 *result_den);
