/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\base\cbdata.h>
%}

import "simics/base-types.dml";

extern void *SIM_cbdata_data(cbdata_t const *cbd);
extern cbdata_type_t const *SIM_cbdata_type(cbdata_t const *cbd);
extern void SIM_free_cbdata(cbdata_t *cbd);
extern cbdata_t SIM_make_cbdata(cbdata_type_t const *type, void *data);
extern cbdata_t SIM_make_simple_cbdata(void *obj);
extern cbdata_t VT_make_cbdata_from_python(SIM_PYOBJECT *pyobj);
extern SIM_PYOBJECT *VT_make_python_cbdata(cbdata_t cbd);
extern typedef struct { cbdata_type_t const *type; void *data; } cbdata_t;
extern typedef struct { char const *name; void (*dealloc)(void *data); } cbdata_type_t;
extern typedef cbdata_t cbdata_call_t;
extern typedef cbdata_t cbdata_register_t;
