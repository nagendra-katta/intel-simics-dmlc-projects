/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

header %{
#include <simics\util\int128.h>
%}

import "simics/base-types.dml";
import "simics/util/arith.dml";

extern int128 int128_add(int128 a, int128 b);
extern int128 int128_add_int64(int128 a, int64 b);
extern char *int128_as_string(int128 v, char *buf);
extern bool int128_div_int64(int128 a, int64 b, int128 *q, int64 *r);
extern bool int128_eq(int128 a, int128 b);
extern bool int128_from_double(int128 *dst, double src);
extern int128 int128_from_hi_lo(int64 hi, uint64 lo);
extern int128 int128_from_int64(int64 v);
extern bool int128_ge(int128 a, int128 b);
extern bool int128_gt(int128 a, int128 b);
extern int64 int128_hi(int128 v);
extern bool int128_le(int128 a, int128 b);
extern uint64 int128_lo(int128 v);
extern bool int128_lt(int128 a, int128 b);
extern int128 int128_mul_int64(int128 a, int64 b);
extern int128 int128_neg(int128 t);
extern int128 int128_sub(int128 a, int128 b);
extern int128 int128_sub_int64(int128 a, int64 b);
extern double int128_to_double(int128 src);
extern bool int128_to_int64(int64 *dst, int128 src);
extern typedef struct { uint64 lo; int64 hi; } int128;
