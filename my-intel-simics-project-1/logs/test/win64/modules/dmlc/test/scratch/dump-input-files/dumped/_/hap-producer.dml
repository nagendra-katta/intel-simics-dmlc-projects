/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\base\hap-producer.h>
%}

import "simics/base/types.dml";
import "simics/base/attr-value.dml";

extern int SIM_c_hap_occurred(hap_type_t hap, conf_object_t *obj, int64 value, ...);
extern int SIM_c_hap_occurred_always(hap_type_t hap, conf_object_t *obj, int64 value, ...);
extern hap_type_t SIM_hap_add_type(char const *hap, char const *params, char const *param_desc, char const *index, char const *desc, int unused);
extern char const *SIM_hap_get_name(hap_type_t hap);
extern hap_type_t SIM_hap_get_number(char const *hap);
extern bool SIM_hap_is_active(hap_type_t hap);
extern bool SIM_hap_is_active_obj(hap_type_t hap, conf_object_t *obj);
extern bool SIM_hap_is_active_obj_idx(hap_type_t hap, conf_object_t *obj, int64 index);
extern int SIM_hap_occurred(hap_type_t hap, conf_object_t *obj, int64 value, attr_value_t *list);
extern int SIM_hap_occurred_always(hap_type_t hap, conf_object_t *obj, int64 value, attr_value_t *list);
extern void SIM_hap_remove_type(char const *hap);
extern attr_value_t VT_hap_global_callback_ranges(hap_type_t hap);
extern typedef int hap_type_t;
