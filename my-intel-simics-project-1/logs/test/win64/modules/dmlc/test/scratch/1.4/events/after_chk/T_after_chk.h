/* Generated by dmlc, do not edit! */

#ifndef T_AFTER_CHK_H
#define T_AFTER_CHK_H

#define DML_PREFIX(x) test_##x

#define DML_LEGACY_ATTRS 1
#define DMLDIR_SWABBER_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\swabber.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\swabber.dml"

#include <simics\util\swabber.h>
#line 14 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_SWABBER_H

#define DMLDIR_FRAGS_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\frags.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\frags.dml"

#include <simics\util\frags.h>
#line 21 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_FRAGS_H

#define DMLDIR_CALLBACKS_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\callbacks.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\callbacks.dml"

#include <simics\base\callbacks.h>
#line 28 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_CALLBACKS_H

#define DMLDIR_DURATION_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\duration.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\duration.dml"

#include <simics\base\duration.h>
#line 35 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_DURATION_H

#define DMLDIR_BIGTIME_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\bigtime.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\bigtime.dml"

#include <simics\base\bigtime.h>
#line 42 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_BIGTIME_H

#define DMLDIR_LOCAL_TIME_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\local-time.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\local-time.dml"

#include <simics\base\local-time.h>
#line 49 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_LOCAL_TIME_H

#define DMLDIR_CYCLE_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\cycle.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\cycle.dml"

#include <simics\model-iface\cycle.h>
#line 56 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_CYCLE_H

#define DMLDIR_CLOCK_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\clock.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\clock.dml"

#include <simics\base\clock.h>
#line 63 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_CLOCK_H

#define DMLDIR_LOG_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\log.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\log.dml"

#include <simics\base\log.h>
#line 70 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_LOG_H

#define DMLDIR_CONFIGURATION_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\configuration.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\configuration.dml"

#include <simics\base\configuration.h>
#line 77 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_CONFIGURATION_H

#define DMLDIR_EVENT_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\event.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\event.dml"

#include <simics\base\event.h>
#line 84 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_EVENT_H

#define DMLDIR_GLOBAL_NOTIFIER_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\global-notifier.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\global-notifier.dml"

#include <simics\base\global-notifier.h>
#line 91 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_GLOBAL_NOTIFIER_H

#define DMLDIR_HAP_PRODUCER_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\hap-producer.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\hap-producer.dml"

#include <simics\base\hap-producer.h>
#line 98 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_HAP_PRODUCER_H

#define DMLDIR_NOTIFIER_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\notifier.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\notifier.dml"

#include <simics\base\notifier.h>
#line 105 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_NOTIFIER_H

#define DMLDIR_OBJECT_LOCKS_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\object-locks.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\object-locks.dml"

#include <simics\base\object-locks.h>
#line 112 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_OBJECT_LOCKS_H

#define DMLDIR_SIM_EXCEPTION_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\sim-exception.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\sim-exception.dml"

#include <simics\base\sim-exception.h>
#line 119 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_SIM_EXCEPTION_H

#define DMLDIR_TIME_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\time.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\time.dml"

#include <simics\base\time.h>
#line 126 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_TIME_H

#define DMLDIR_DBUFFER_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\dbuffer.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\dbuffer.dml"

#include <simics\util\dbuffer.h>
#line 133 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_DBUFFER_H

#define DMLDIR_CBDATA_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\cbdata.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\cbdata.dml"

#include <simics\base\cbdata.h>
#line 140 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_CBDATA_H

#define DMLDIR_ARITH_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\arith.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\arith.dml"

#include <simics\util\arith.h>
#line 147 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_ARITH_H

#define DMLDIR_INT128_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\int128.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\int128.dml"

#include <simics\util\int128.h>
#line 154 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_INT128_H

#define DMLDIR_BREAKPOINTS_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\breakpoints.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\breakpoints.dml"

#include <simics\model-iface\breakpoints.h>
#line 161 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_BREAKPOINTS_H

#define DMLDIR_GENERIC_SPR_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\processor\\generic-spr.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\processor\\generic-spr.dml"

#include <simics\processor\generic-spr.h>
#line 168 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_GENERIC_SPR_H

#define DMLDIR_6_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\obsolete\\6.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\obsolete\\6.dml"

#include <simics\obsolete\6.h>
#line 175 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_6_H

#define DMLDIR_DEVICE_API_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\device-api.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\device-api.dml"

#include <simics\device-api.h>
#line 182 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_DEVICE_API_H

#define DMLDIR_IO_MEMORY_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\devs\\io-memory.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\devs\\io-memory.dml"

#include <simics\devs\io-memory.h>
#line 189 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_IO_MEMORY_H

#define DMLDIR_INSTRUMENTATION_PROVIDER_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\instrumentation-provider.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\instrumentation-provider.dml"

#include <simics\model-iface\instrumentation-provider.h>
#line 196 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_INSTRUMENTATION_PROVIDER_H

#define DMLDIR_BANK_INSTRUMENTATION_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\bank-instrumentation.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\bank-instrumentation.dml"

#include <simics\model-iface\bank-instrumentation.h>
#line 203 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_BANK_INSTRUMENTATION_H

#define DMLDIR_INT_REGISTER_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\int-register.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\int-register.dml"

#include <simics\model-iface\int-register.h>
#line 210 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_INT_REGISTER_H

#define DMLDIR_REGISTER_VIEW_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\register-view.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\register-view.dml"

#include <simics\model-iface\register-view.h>
#line 217 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_REGISTER_VIEW_H

#define DMLDIR_REGISTER_VIEW_READ_ONLY_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\register-view-read-only.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\register-view-read-only.dml"

#include <simics\model-iface\register-view-read-only.h>
#line 224 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_REGISTER_VIEW_READ_ONLY_H

#define DMLDIR_BREAKPOINTS_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\breakpoints.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\breakpoints.dml"

#include <simics\base\breakpoints.h>
#line 231 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_BREAKPOINTS_H

#define DMLDIR_TYPES_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\processor\\types.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\processor\\types.dml"

#include <simics\processor\types.h>
#line 238 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_TYPES_H

#define DMLDIR_DIRECT_MEMORY_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\direct-memory.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\direct-memory.dml"

#include <simics\base\direct-memory.h>
#line 245 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_DIRECT_MEMORY_H

#define DMLDIR_MAP_TARGET_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\map-target.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\map-target.dml"

#include <simics\base\map-target.h>
#line 252 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_MAP_TARGET_H

#define DMLDIR_MEMORY_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\memory.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\memory.dml"

#include <simics\base\memory.h>
#line 259 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_MEMORY_H

#define DMLDIR_MEMORY_TRANSACTION_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\memory-transaction.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\memory-transaction.dml"

#include <simics\base\memory-transaction.h>
#line 266 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_MEMORY_TRANSACTION_H

#define DMLDIR_TRANSACTION_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\transaction.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\transaction.dml"

#include <simics\base\transaction.h>
#line 273 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_TRANSACTION_H

#define DMLDIR_PYWRAP_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\pywrap.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\pywrap.dml"

#include <simics\pywrap.h>
#line 280 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_PYWRAP_H

#define DMLDIR_TRANSACTION_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\transaction.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\model-iface\\transaction.dml"

#include <simics\model-iface\transaction.h>
#line 287 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_TRANSACTION_H

#define DMLDIR_HASHTAB_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\hashtab.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\hashtab.dml"

#include <simics\util\hashtab.h>
#line 294 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_HASHTAB_H

#define DMLDIR_BITCOUNT_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\bitcount.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\bitcount.dml"

#include <simics\util\bitcount.h>
#line 301 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_BITCOUNT_H

#define DMLDIR_PYTHON_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\simulator\\python.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\simulator\\python.dml"

#include <simics\simulator\python.h>
#line 308 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_PYTHON_H

#define DMLDIR_SOBJECT_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\sobject.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\sobject.dml"

#include <simics\base\sobject.h>
#line 315 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_SOBJECT_H

#define DMLDIR_TYPES_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\types.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\types.dml"

#include <simics\base\types.h>
#line 322 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_TYPES_H

#define DMLDIR_VERSION_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\version.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\version.dml"

#include <simics\base\version.h>
#line 329 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_VERSION_H

#define DMLDIR_ATTR_VALUE_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\attr-value.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\attr-value.dml"

#include <simics\base\attr-value.h>
#line 336 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_ATTR_VALUE_H

#define DMLDIR_ALLOC_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\alloc.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\alloc.dml"

#include <simics\util\alloc.h>
#line 343 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_ALLOC_H

#define DMLDIR_BUILD_ID_7_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\build-id-7.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\build-id-7.dml"

#include <simics\build-id-7.h>
#line 350 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_BUILD_ID_7_H

#define DMLDIR_BUILD_ID_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\build-id.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\build-id.dml"

#include <simics\build-id.h>
#line 357 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_BUILD_ID_H

#define DMLDIR_MODULE_HOST_CONFIG_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\module-host-config.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\module-host-config.dml"

#include <simics\module-host-config.h>
#line 364 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_MODULE_HOST_CONFIG_H

#define DMLDIR_HOST_INFO_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\host-info.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\host-info.dml"

#include <simics\host-info.h>
#line 371 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_HOST_INFO_H

#define DMLDIR_BASE_TYPES_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base-types.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base-types.dml"

#include <simics\base-types.h>
#line 378 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_BASE_TYPES_H

#define DMLDIR_STRBUF_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\strbuf.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\strbuf.dml"

#include <simics\util\strbuf.h>
#line 385 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_STRBUF_H

#define DMLDIR_HELP_MACROS_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\help-macros.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\help-macros.dml"

#include <simics\util\help-macros.h>
#line 392 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_HELP_MACROS_H

#define DMLDIR_VECT_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\vect.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\util\\vect.dml"

#include <simics\util\vect.h>
#line 399 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_VECT_H

#define DMLDIR_CONF_OBJECT_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\conf-object.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\base\\conf-object.dml"

#include <simics\base\conf-object.h>
#line 406 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_CONF_OBJECT_H

#define DMLDIR_SIM_GET_CLASS_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\simulator\\sim-get-class.h"
#line 16 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\api\\6\\1.4\\simics\\simulator\\sim-get-class.dml"

#include <simics\simulator\sim-get-class.h>
#line 413 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_SIM_GET_CLASS_H

#define DMLDIR_DML_BUILTINS_H "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\1.4\\dml-builtins.h"
#line 13 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\win64\\bin\\dml\\1.4\\dml-builtins.dml"

    #include <simics/dmllib.h>
#line 420 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.4\\events\\after_chk\\T_after_chk.h"
#undef DMLDIR_DML_BUILTINS_H


#include <simics/util/help-macros.h>
#include <stdint.h>
#include "T_after_chk-struct.h"

typedef _traitref_t name;
typedef _traitref_t _qname;
typedef _traitref_t desc;
typedef _traitref_t documentation;
typedef _traitref_t limitations;
typedef _traitref_t object;
typedef _traitref_t _conf_attribute;
typedef _traitref_t attribute;
typedef _traitref_t init;
typedef _traitref_t uint64_attr;
typedef _traitref_t bool_attr;
typedef _traitref_t t;
typedef _traitref_t pseudo_attr;
typedef _traitref_t write_only_attr;
typedef _traitref_t post_init;
typedef _traitref_t port;
typedef _traitref_t group;
typedef _traitref_t set_val;
typedef _traitref_t _set;
typedef _traitref_t set;
typedef _traitref_t _lsb;
typedef _traitref_t _bitsize;
typedef _traitref_t _set_field;
typedef _traitref_t init_val;
typedef _traitref_t shown_desc;
typedef _traitref_t get_val;
typedef _traitref_t _get;
typedef _traitref_t field;
typedef _traitref_t get;
typedef _traitref_t _get_field;
typedef _traitref_t write_field;
typedef _traitref_t _write_field;
typedef _traitref_t read_field;
typedef _traitref_t _read_field;
typedef _traitref_t read_register;
typedef _traitref_t write_register;
typedef _traitref_t _register;
typedef _traitref_t _reg_write_as_field;
typedef _traitref_t _reg_read_as_field;
typedef _traitref_t implement;
typedef _traitref_t bank_transaction;
typedef _traitref_t bank_io_memory;
typedef _traitref_t bank;
typedef _traitref_t destroy;
typedef _traitref_t device;
typedef _traitref_t int64_attr;
typedef _traitref_t double_attr;
typedef _traitref_t read_only_attr;
typedef _traitref_t _connect;
typedef _traitref_t init_as_subobj;
typedef _traitref_t _interface;
typedef _traitref_t subdevice;
typedef _traitref_t __read;
typedef _traitref_t __write;
typedef _traitref_t event;
typedef _traitref_t _event;
typedef _traitref_t _time_event;
typedef _traitref_t _cycle_event;
typedef _traitref_t _simple_event;
typedef _traitref_t simple_time_event;
typedef _traitref_t simple_cycle_event;
typedef _traitref_t _custom_event;
typedef _traitref_t custom_time_event;
typedef _traitref_t custom_cycle_event;
typedef _traitref_t _uint64_event;
typedef _traitref_t uint64_time_event;
typedef _traitref_t uint64_cycle_event;


struct _name {
    char const **name;
};
struct __qname {
};
struct _desc {
};
struct _documentation {
};
struct _limitations {
};
struct _object {
    struct __qname _qname;
    struct _desc desc;
    struct _documentation documentation;
    struct _limitations limitations;
    struct _name name;
};
struct __conf_attribute {
    struct _object object;
    bool *readable;
    bool *writable;
    char const **_attr_type;
    char const **_attr_name;
    conf_class_t ***_parent_obj_class;
    _dml_attr_parent_obj_proxy_info_t *_parent_obj_proxy_info;
    uint32 *_object_relative_dims;
    bool *_attr_allow_cutoff;
    char const **_documentation;
    attr_attr_t *_flags;
    bool *_should_be_registered;
    set_error_t (*set_attribute)(test_t *arg0, _conf_attribute arg1, attr_value_t arg2);
    attr_value_t (*get_attribute)(test_t *arg0, _conf_attribute arg1);
};
struct _attribute {
    struct __conf_attribute _conf_attribute;
    attr_value_t (*get)(test_t *arg0, attribute arg1);
    bool (*set)(test_t *arg0, attribute arg1, attr_value_t arg2);
};
struct _init {
    _each_in_param_t _each_init;
    void  (*init)(test_t *arg0, init arg1);
};
struct _uint64_attr {
    struct _attribute attribute;
    struct _init init;
    uint64 *init_val;
    uint32 val;
};
struct _bool_attr {
    struct _attribute attribute;
    struct _init init;
    bool *init_val;
    uint32 val;
};
struct _t {
};
struct _pseudo_attr {
    struct _attribute attribute;
};
struct _write_only_attr {
    struct _pseudo_attr pseudo_attr;
};
struct _post_init {
    _each_in_param_t _each_post_init;
    void  (*post_init)(test_t *arg0, post_init arg1);
};
struct _port {
    struct _object object;
    uint32 _cached_port_obj;
};
struct _group {
    struct _object object;
};
struct _set_val {
    void  (*set_val)(test_t *arg0, set_val arg1, uint64 arg2);
    void  (*_default_set)(test_t *arg0, set_val arg1, uint64 arg2);
};
struct __set {
    struct _set_val set_val;
    void  (*set)(test_t *arg0, _set arg1, uint64 arg2);
};
struct _set {
    struct __set _set;
};
struct __lsb {
    uint8 *lsb;
};
struct __bitsize {
    uint8 *bitsize;
};
struct __set_field {
    struct __bitsize _bitsize;
    struct __lsb _lsb;
    struct _set set;
};
struct _init_val {
    struct _init init;
    uint64 *init_val;
    void  (*_default_init)(test_t *arg0, init_val arg1);
};
struct _shown_desc {
    struct _desc desc;
    char const **shown_desc;
};
struct _get_val {
    uint64 (*get_val)(test_t *arg0, get_val arg1);
    uint64 (*_default_get)(test_t *arg0, get_val arg1);
};
struct __get {
    struct _get_val get_val;
    uint64 (*get)(test_t *arg0, _get arg1);
};
struct _field {
    struct __bitsize _bitsize;
    struct __get _get;
    struct __lsb _lsb;
    struct __set _set;
    struct _init_val init_val;
    struct _object object;
    struct _shown_desc shown_desc;
    _register *reg;
};
struct _get {
    struct __get _get;
};
struct __get_field {
    struct __bitsize _bitsize;
    struct __lsb _lsb;
    struct _get get;
};
struct _write_field {
    void  (*write_field)(test_t *arg0, write_field arg1, uint64 arg2, uint64 arg3, void  *arg4);
};
struct __write_field {
    struct __bitsize _bitsize;
    struct __lsb _lsb;
    struct _write_field write_field;
};
struct _read_field {
    uint64 (*read_field)(test_t *arg0, read_field arg1, uint64 arg2, void  *arg3);
};
struct __read_field {
    struct __bitsize _bitsize;
    struct __lsb _lsb;
    struct _read_field read_field;
};
struct _read_register {
    uint64 (*read_register)(test_t *arg0, read_register arg1, uint64 arg2, void  *arg3);
};
struct _write_register {
    void  (*write_register)(test_t *arg0, write_register arg1, uint64 arg2, uint64 arg3, void  *arg4);
};
struct __register {
    struct __bitsize _bitsize;
    struct __conf_attribute _conf_attribute;
    struct _get get;
    struct _init_val init_val;
    struct _read_register read_register;
    struct _set set;
    struct _shown_desc shown_desc;
    struct _write_register write_register;
    _each_in_param_t fields;
    _each_in_param_t _get_fields;
    _each_in_param_t _set_fields;
    _each_in_param_t _read_fields;
    _each_in_param_t _write_fields;
    uint64 *offset;
    bool *_le_byte_order;
    bool *_is_read_only;
    bool *mapped;
    uint32 val;
    uint64 (*read_unmapped_bits)(test_t *arg0, _register arg1, uint64 arg2, void  *arg3);
    void  (*write_unmapped_bits)(test_t *arg0, _register arg1, uint64 arg2, uint64 arg3, void  *arg4);
};
struct __reg_write_as_field {
    struct __register _register;
    struct _write_field write_field;
};
struct __reg_read_as_field {
    struct _read_field read_field;
    struct __register _register;
};
struct _implement {
    struct _object object;
};
struct _bank_transaction {
    struct _implement implement;
};
struct _bank_io_memory {
    struct _implement implement;
};
struct _memo_bank___reginfo_table {
    _register const *p__out0;
    uint64 p__out1;
    int8 ran;
};
struct _memo_bank___sorted_regs {
    _register const *p__out0;
    int p__out1;
    int8 ran;
};
struct _bank {
    struct _object object;
    struct _shown_desc shown_desc;
    bool *partial;
    bool *overlapping;
    bool *_le_byte_order;
    _each_in_param_t _each_register;
    bool *be_bitorder;
    bool *use_io_memory;
    uint32 _before_read_callbacks;
    uint32 _after_read_callbacks;
    uint32 _before_write_callbacks;
    uint32 _after_write_callbacks;
    uint32 _connections;
    uint32 _cached_bank_obj;
    bool (*_get_register)(test_t *arg0, bank arg1, uint32 arg2, _register *arg3);
    bool (*unmapped_read)(test_t *arg0, bank arg1, uint64 arg2, uint64 arg3, void  *arg4, uint64 *arg5);
    bool (*unmapped_write)(test_t *arg0, bank arg1, uint64 arg2, uint64 arg3, uint64 arg4, void  *arg5);
    bool (*read)(test_t *arg0, bank arg1, uint64 arg2, uint64 arg3, void  *arg4, uint64 *arg5);
    bool (*unmapped_get)(test_t *arg0, bank arg1, uint64 arg2, uint64 arg3, uint64 *arg4);
    bool (*get)(test_t *arg0, bank arg1, uint64 arg2, uint64 arg3, uint64 *arg4);
    bool (*write)(test_t *arg0, bank arg1, uint64 arg2, uint64 arg3, uint64 arg4, void  *arg5);
    void  (*set)(test_t *arg0, bank arg1, uint64 arg2, uint64 arg3, uint64 arg4);
    bool (*io_memory_access)(test_t *arg0, bank arg1, generic_transaction_t *arg2, uint64 arg3, void  *arg4);
    exception_type_t (*transaction_access)(test_t *arg0, bank arg1, transaction_t *arg2, uint64 arg3, void  *arg4);
    struct _memo_bank___reginfo_table *_memo_outs__reginfo_table;
    struct _memo_bank___sorted_regs *_memo_outs__sorted_regs;
};
struct _destroy {
    _each_in_param_t _each_destroy;
    void  (*destroy)(test_t *arg0, destroy arg1);
};
struct _device {
    struct _destroy destroy;
    struct _init init;
    struct _object object;
    struct _post_init post_init;
};
struct _int64_attr {
    struct _attribute attribute;
    struct _init init;
    int64 *init_val;
    uint32 val;
};
struct _double_attr {
    struct _attribute attribute;
    struct _init init;
    double *init_val;
    uint32 val;
};
struct _read_only_attr {
    struct _pseudo_attr pseudo_attr;
};
struct __connect {
    struct __conf_attribute _conf_attribute;
    _each_in_param_t _each_interface;
    uint32 obj;
    uint32 port;
    bool (*validate)(test_t *arg0, _connect arg1, conf_object_t *arg2);
    void  (*set)(test_t *arg0, _connect arg1, conf_object_t *arg2);
};
struct _init_as_subobj {
    struct __connect _connect;
    struct _init init;
    char const **classname;
};
struct __interface {
    struct _object object;
    bool *_required;
    uint32 val;
};
struct _subdevice {
    struct _object object;
    uint32 _cached_port_obj;
};
struct ___read {
    struct __get _get;
    struct _read_field read_field;
    uint64 (*read)(test_t *arg0, __read arg1);
};
struct ___write {
    struct __get _get;
    struct __set _set;
    struct _write_field write_field;
    void  (*write)(test_t *arg0, __write arg1, uint64 arg2);
};
struct _event {
    struct _object object;
    struct _shown_desc shown_desc;
    event_class_t *const **_pevclass;
    void  (*_callback)(test_t *arg0, event arg1, void  *arg2);
    char *(*_describe_event)(test_t *arg0, event arg1, void  *arg2);
    attr_value_t (*_get_event_info)(test_t *arg0, event arg1, void  *arg2);
    void  *(*_set_event_info)(test_t *arg0, event arg1, attr_value_t arg2);
    void  (*_destroy)(test_t *arg0, event arg1, void  *arg2);
};
struct __event {
    struct _event event;
};
struct __time_event {
    struct __event _event;
};
struct __cycle_event {
    struct __event _event;
};
struct __simple_event {
    struct __event _event;
    void  (*event)(test_t *arg0, _simple_event arg1);
};
struct _simple_time_event {
    struct __simple_event _simple_event;
    struct __time_event _time_event;
};
struct _simple_cycle_event {
    struct __cycle_event _cycle_event;
    struct __simple_event _simple_event;
};
struct __custom_event {
    struct __event _event;
    void  (*event)(test_t *arg0, _custom_event arg1, void  *arg2);
    attr_value_t (*get_event_info)(test_t *arg0, _custom_event arg1, void  *arg2);
    void  *(*set_event_info)(test_t *arg0, _custom_event arg1, attr_value_t arg2);
    void  (*destroy)(test_t *arg0, _custom_event arg1, void  *arg2);
};
struct _custom_time_event {
    struct __custom_event _custom_event;
    struct __time_event _time_event;
};
struct _custom_cycle_event {
    struct __custom_event _custom_event;
    struct __cycle_event _cycle_event;
};
struct __uint64_event {
    struct __event _event;
    void  (*event)(test_t *arg0, _uint64_event arg1, uint64 arg2);
};
struct _uint64_time_event {
    struct __time_event _time_event;
    struct __uint64_event _uint64_event;
};
struct _uint64_cycle_event {
    struct __cycle_event _cycle_event;
    struct __uint64_event _uint64_event;
};

struct _typeseq_1 {
    uint64 comp0;
};
typedef struct _typeseq_1 _typeseq_1_t;

struct _simple_event_0_args {
    _hookref_t hookref;
    struct _typeseq_1 args;
};
struct _simple_event_1_args {
    uint64 v;
};
struct _simple_event_2_args {
    uint64 v;
};
struct _simple_event_3_args {
    uint64 v;
};

struct __devstruct_0test_0flag {
    bool val[2LL];
};
struct __devstruct_0test_0g_0flag {
    bool val[2LL];
};
struct __devstruct_0test_0g_0storage {
    uint64 val[2LL];
};
struct __devstruct_0test_0g {
    _dml_hook_t h1;
    _dml_hook_t h2;
    struct __devstruct_0test_0g_0flag flag;
    struct __devstruct_0test_0g_0storage storage;
};
struct __devstruct_0test_0p_0flag {
    bool val[2LL][2LL][2LL];
};
struct __devstruct_0test_0p_0storage {
    uint64 val[2LL][2LL][2LL];
};
struct __devstruct_0test_0p {
    conf_object_t *_obj[2LL][2LL];
    conf_object_t *_cached_port_obj[2LL][2LL];
    _dml_hook_t h1[2LL][2LL];
    _dml_hook_t h2[2LL][2LL];
    struct __devstruct_0test_0p_0flag flag;
    struct __devstruct_0test_0p_0storage storage;
};
struct __devstruct_0test_0storage {
    uint64 val[2LL];
};
struct test {
    conf_object_t obj;
    _dml_immediate_after_state_t *_immediate_after_state;
    _dml_detached_hook_queue_t *_detached_hook_queue_stack;
    bool _has_state_callbacks;
    bool _issuing_state_callbacks;
    dml_qname_cache_t _qname_cache;
    ht_int_table_t _subsequent_log_ht;
    _dml_hook_t h1;
    _dml_hook_t h2;
    struct __devstruct_0test_0flag flag;
    struct __devstruct_0test_0g g;
    struct __devstruct_0test_0p p;
    struct __devstruct_0test_0storage storage;
};
// allows generated code to store device struct offsets in uint32,
// which saves space
STATIC_ASSERT(sizeof(struct test) <= UINT32_MAX);
static const uint64 _dml_loggroup_Register_Read UNUSED = 1ULL;
static const uint64 _dml_loggroup_Register_Write UNUSED = 2ULL;

void hard_reset_test(test_t *_obj);
void soft_reset_test(test_t *_obj);

#endif /* not T_AFTER_CHK_H */
