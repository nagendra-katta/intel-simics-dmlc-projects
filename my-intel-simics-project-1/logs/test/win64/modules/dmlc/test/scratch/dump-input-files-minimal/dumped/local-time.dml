/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

header %{
#include <simics\base\local-time.h>
%}

import "simics/base/types.dml";
import "simics/base/duration.dml";
import "simics/base/bigtime.dml";
import "simics/base/attr-value.dml";

extern local_time_t local_time_add(local_time_t t, duration_t delta);
extern bigtime_t local_time_as_bigtime(local_time_t t);
extern double local_time_as_sec(local_time_t t);
extern void local_time_as_string(local_time_t v, char *str);
extern conf_object_t *local_time_clock(local_time_t t);
extern duration_t local_time_diff(local_time_t t1, local_time_t t2);
extern bool local_time_eq(local_time_t a, local_time_t b);
extern local_time_t local_time_from_attr(attr_value_t val);
extern local_time_t local_time_from_bigtime(conf_object_t *clock, bigtime_t t);
extern local_time_t local_time_from_sec(conf_object_t *clock, double t);
extern bool local_time_ge(local_time_t a, local_time_t b);
extern bool local_time_gt(local_time_t a, local_time_t b);
extern bool local_time_is_illegal(local_time_t t);
extern bool local_time_le(local_time_t a, local_time_t b);
extern bool local_time_lt(local_time_t a, local_time_t b);
extern local_time_t local_time_sub(local_time_t t, duration_t delta);
extern attr_value_t local_time_to_attr(local_time_t t);
extern typedef struct { conf_object_t *clock; bigtime_t t; } local_time_t;
