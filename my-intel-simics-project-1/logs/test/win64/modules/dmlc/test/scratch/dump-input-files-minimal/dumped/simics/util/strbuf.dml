/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.2;

header %{
#include <simics\util\strbuf.h>
%}

import "simics/build-id.dml";
import "simics/host-info.dml";
import "simics/base-types.dml";

extern void sb_addc(strbuf_t *sb, char c);
extern void sb_addchars(strbuf_t *sb, char c, uint32 n);
extern void sb_addesc(strbuf_t *sb, char c, char delim);
extern void sb_addfmt(strbuf_t *sb, char const *format, ...);
extern void sb_addmem(strbuf_t *sb, char const *str, uint32 len);
extern void sb_addstr(strbuf_t *sb, char const *str);
extern void sb_cat(strbuf_t *sb1, strbuf_t const *sb2);
extern char sb_char(strbuf_t const *sb, int i);
extern void sb_clear(strbuf_t *sb);
extern void sb_copy(strbuf_t *dst, strbuf_t const *src);
extern void sb_delete(strbuf_t *sb, int start, uint32 n);
extern char *sb_detach(strbuf_t *sb);
extern strbuf_t sb_dup(strbuf_t const *sb);
extern void sb_escape(strbuf_t *buf, char delim);
extern void sb_extend(strbuf_t *sb, uint32 minlen);
extern void sb_fmt(strbuf_t *sb, char const *format, ...);
extern void sb_free(strbuf_t *sb);
extern void sb_init(strbuf_t *sb);
extern void sb_insertmem(strbuf_t *sb, uint32 start, char const *str, uint32 n);
extern void sb_insertstr(strbuf_t *sb, uint32 start, char const *str);
extern int sb_len(strbuf_t const *sb);
extern strbuf_t sb_new(char const *s);
extern strbuf_t sb_newf(char const *format, ...);
extern bool sb_readline(strbuf_t *sb, FILE *f);
extern void sb_realloc(strbuf_t *sb, uint32 minlen);
extern void sb_resize(strbuf_t *sb, uint32 size);
extern void sb_set(strbuf_t *sb, char const *str);
extern char *sb_str(strbuf_t const *sb);
extern int sb_write(strbuf_t const *sb, FILE *f);
extern typedef struct { char *s; uint32 size; uint32 len; } strbuf_t;
