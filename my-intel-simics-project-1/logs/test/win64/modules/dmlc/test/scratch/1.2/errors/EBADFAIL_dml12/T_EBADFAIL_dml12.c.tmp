/*
 * Generated by dmlc, do not edit!
 *
 * Source files:
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\modules\dmlc\test\1.2\errors\T_EBADFAIL_dml12.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\modules\dmlc\test\1.2\errors\EBADFAIL_dml14.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\1.2\dml-builtins.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\simulator\python.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\attr-value.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\util\alloc.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\module-host-config.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\util\help-macros.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\util\strbuf.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base-types.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\host-info.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\build-id.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\build-id-7.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\version.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\types.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\processor\event.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\processor\time.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\event.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\time.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\conf-object.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\util\vect.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\sobject.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\util\hashtab.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\model-iface\register-view.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\pywrap.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\model-iface\int-register.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\model-iface\bank-instrumentation.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\model-iface\instrumentation-provider.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\memory-transaction.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\memory.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\devs\io-memory.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\1.2\simics-api.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\util\bitcount.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\1.2\simics-processor.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\1.2\simics-memory.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\1.2\simics-hindsight.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\1.2\simics-event.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\1.2\simics-device.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\1.2\simics-configuration.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\1.2\simics-breakpoints.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\1.2\simics-types.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\device-api.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\obsolete\6.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\processor\generic-spr.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\model-iface\breakpoints.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\util\int128.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\util\arith.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\cbdata.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\breakpoints.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\processor\types.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\util\dbuffer.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\sim-exception.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\object-locks.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\notifier.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\map-target.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\direct-memory.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\transaction.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\hap-producer.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\global-notifier.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\configuration.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\log.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\clock.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\model-iface\cycle.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\local-time.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\bigtime.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\duration.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\base\callbacks.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\util\frags.dml
 *   C:\Users\nagen\simics-projects\my-intel-simics-project-1\win64\bin\dml\api\6\1.2\simics\util\swabber.dml
 */

#ifndef SIMICS_6_API
#define SIMICS_6_API
#endif

#include "T_EBADFAIL_dml12.h"
#include "T_EBADFAIL_dml12-protos.c"

static set_error_t set_a(conf_object_t *_obj, attr_value_t *_val, lang_void *_aux)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    set_error_t _status = Sim_Set_Illegal_Value;
    #line 302 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        #line 302 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        attr_value_t v6_value UNUSED  = *_val;
        #line 376 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        set_error_t v6_err UNUSED  = 0;
        v6_err = 0;
        #line 379 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        if (_DML_M_a__before_set(_dev))
        #line 379 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        goto throw1;
        if (_DML_M_a__set(_dev, v6_value))
        #line 380 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        goto throw1;
        if (_DML_M_a__after_set(_dev))
        #line 381 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        goto throw1;
        #line 383 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        if (false) throw1:
        #line 383 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v6_err = 3;
        #line 376 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        _status = v6_err;
        #line 302 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    }
    #line 113 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
    return _status;
}

static attr_value_t get_a(conf_object_t *_obj, lang_void *_aux)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    attr_value_t _val0;
    attr_value_t v14_value UNUSED ;
    memset((void *)&v14_value, 0, sizeof(attr_value_t ));
    #line 311 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        #line 386 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        attr_value_t v17_value UNUSED ;
        #line 386 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v17_value, 0, sizeof(attr_value_t ));
        {
            #line 345 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            attr_value_t v19_value UNUSED ;
            #line 345 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            memset((void *)&v19_value, 0, sizeof(attr_value_t ));
            #line 351 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            v19_value = SIM_make_attr_uint64(_dev->a);
            #line 345 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            v17_value = v19_value;
            #line 387 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        }
        #line 386 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v14_value = v17_value;
        #line 311 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    }
    #line 144 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
    _val0 = v14_value;
    return _val0;
}

static void  _DML_PIFACE_b__bank_instrumentation_subscribe__disable_connection_callbacks(conf_object_t *_obj, conf_object_t *connection)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    if (_DML_M_b__bank_instrumentation_subscribe__disable_connection_callbacks(_dev, connection))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static void  _DML_PIFACE_b__bank_instrumentation_subscribe__enable_connection_callbacks(conf_object_t *_obj, conf_object_t *connection)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    if (_DML_M_b__bank_instrumentation_subscribe__enable_connection_callbacks(_dev, connection))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static bank_callback_handle_t _DML_PIFACE_b__bank_instrumentation_subscribe__register_after_read(conf_object_t *_obj, conf_object_t *connection, uint64 offset, uint64 size, after_read_callback_t after_read, void  *user_data)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    bank_callback_handle_t handle = 0;
    {
        bank_callback_handle_t v23__ret_handle UNUSED  = 0;
        if (_DML_M_b__bank_instrumentation_subscribe__register_after_read(_dev, connection, offset, size, after_read, user_data, &v23__ret_handle))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        handle = v23__ret_handle;
    }
    return handle;
}

static bank_callback_handle_t _DML_PIFACE_b__bank_instrumentation_subscribe__register_after_write(conf_object_t *_obj, conf_object_t *connection, uint64 offset, uint64 size, after_write_callback_t after_write, void  *user_data)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    bank_callback_handle_t handle = 0;
    {
        bank_callback_handle_t v24__ret_handle UNUSED  = 0;
        if (_DML_M_b__bank_instrumentation_subscribe__register_after_write(_dev, connection, offset, size, after_write, user_data, &v24__ret_handle))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        handle = v24__ret_handle;
    }
    return handle;
}

static bank_callback_handle_t _DML_PIFACE_b__bank_instrumentation_subscribe__register_before_read(conf_object_t *_obj, conf_object_t *connection, uint64 offset, uint64 size, before_read_callback_t before_read, void  *user_data)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    bank_callback_handle_t handle = 0;
    {
        bank_callback_handle_t v25__ret_handle UNUSED  = 0;
        if (_DML_M_b__bank_instrumentation_subscribe__register_before_read(_dev, connection, offset, size, before_read, user_data, &v25__ret_handle))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        handle = v25__ret_handle;
    }
    return handle;
}

static bank_callback_handle_t _DML_PIFACE_b__bank_instrumentation_subscribe__register_before_write(conf_object_t *_obj, conf_object_t *connection, uint64 offset, uint64 size, before_write_callback_t before_write, void  *user_data)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    bank_callback_handle_t handle = 0;
    {
        bank_callback_handle_t v26__ret_handle UNUSED  = 0;
        if (_DML_M_b__bank_instrumentation_subscribe__register_before_write(_dev, connection, offset, size, before_write, user_data, &v26__ret_handle))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        handle = v26__ret_handle;
    }
    return handle;
}

static void  _DML_PIFACE_b__bank_instrumentation_subscribe__remove_callback(conf_object_t *_obj, bank_callback_handle_t callback)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    if (_DML_M_b__bank_instrumentation_subscribe__remove_callback(_dev, callback))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static void  _DML_PIFACE_b__bank_instrumentation_subscribe__remove_connection_callbacks(conf_object_t *_obj, conf_object_t *connection)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    if (_DML_M_b__bank_instrumentation_subscribe__remove_connection_callbacks(_dev, connection))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static void  _DML_IFACE_b__bank_instrumentation_subscribe__disable_connection_callbacks(conf_object_t *_obj, conf_object_t *connection)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    if (_DML_M_b__bank_instrumentation_subscribe__disable_connection_callbacks(_dev, connection))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static void  _DML_IFACE_b__bank_instrumentation_subscribe__enable_connection_callbacks(conf_object_t *_obj, conf_object_t *connection)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    if (_DML_M_b__bank_instrumentation_subscribe__enable_connection_callbacks(_dev, connection))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static bank_callback_handle_t _DML_IFACE_b__bank_instrumentation_subscribe__register_after_read(conf_object_t *_obj, conf_object_t *connection, uint64 offset, uint64 size, after_read_callback_t after_read, void  *user_data)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    bank_callback_handle_t handle = 0;
    {
        bank_callback_handle_t v31__ret_handle UNUSED  = 0;
        if (_DML_M_b__bank_instrumentation_subscribe__register_after_read(_dev, connection, offset, size, after_read, user_data, &v31__ret_handle))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        handle = v31__ret_handle;
    }
    return handle;
}

static bank_callback_handle_t _DML_IFACE_b__bank_instrumentation_subscribe__register_after_write(conf_object_t *_obj, conf_object_t *connection, uint64 offset, uint64 size, after_write_callback_t after_write, void  *user_data)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    bank_callback_handle_t handle = 0;
    {
        bank_callback_handle_t v32__ret_handle UNUSED  = 0;
        if (_DML_M_b__bank_instrumentation_subscribe__register_after_write(_dev, connection, offset, size, after_write, user_data, &v32__ret_handle))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        handle = v32__ret_handle;
    }
    return handle;
}

static bank_callback_handle_t _DML_IFACE_b__bank_instrumentation_subscribe__register_before_read(conf_object_t *_obj, conf_object_t *connection, uint64 offset, uint64 size, before_read_callback_t before_read, void  *user_data)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    bank_callback_handle_t handle = 0;
    {
        bank_callback_handle_t v33__ret_handle UNUSED  = 0;
        if (_DML_M_b__bank_instrumentation_subscribe__register_before_read(_dev, connection, offset, size, before_read, user_data, &v33__ret_handle))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        handle = v33__ret_handle;
    }
    return handle;
}

static bank_callback_handle_t _DML_IFACE_b__bank_instrumentation_subscribe__register_before_write(conf_object_t *_obj, conf_object_t *connection, uint64 offset, uint64 size, before_write_callback_t before_write, void  *user_data)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    bank_callback_handle_t handle = 0;
    {
        bank_callback_handle_t v34__ret_handle UNUSED  = 0;
        if (_DML_M_b__bank_instrumentation_subscribe__register_before_write(_dev, connection, offset, size, before_write, user_data, &v34__ret_handle))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        handle = v34__ret_handle;
    }
    return handle;
}

static void  _DML_IFACE_b__bank_instrumentation_subscribe__remove_callback(conf_object_t *_obj, bank_callback_handle_t callback)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    if (_DML_M_b__bank_instrumentation_subscribe__remove_callback(_dev, callback))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static void  _DML_IFACE_b__bank_instrumentation_subscribe__remove_connection_callbacks(conf_object_t *_obj, conf_object_t *connection)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    if (_DML_M_b__bank_instrumentation_subscribe__remove_connection_callbacks(_dev, connection))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static attr_value_t _DML_PIFACE_b__instrumentation_order__get_connections(conf_object_t *_obj)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    attr_value_t connections;
    memset((void *)&connections, 0, sizeof(attr_value_t ));
    {
        attr_value_t v37__ret_connections UNUSED ;
        memset((void *)&v37__ret_connections, 0, sizeof(attr_value_t ));
        if (_DML_M_b__instrumentation_order__get_connections(_dev, &v37__ret_connections))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        connections = v37__ret_connections;
    }
    return connections;
}

static bool _DML_PIFACE_b__instrumentation_order__move_before(conf_object_t *_obj, conf_object_t *connection, conf_object_t *before)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    bool success = 0;
    {
        bool v38__ret_success UNUSED  = 0;
        if (_DML_M_b__instrumentation_order__move_before(_dev, connection, before, &v38__ret_success))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        success = v38__ret_success;
    }
    return success;
}

static attr_value_t _DML_IFACE_b__instrumentation_order__get_connections(conf_object_t *_obj)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    attr_value_t connections;
    memset((void *)&connections, 0, sizeof(attr_value_t ));
    {
        attr_value_t v39__ret_connections UNUSED ;
        memset((void *)&v39__ret_connections, 0, sizeof(attr_value_t ));
        if (_DML_M_b__instrumentation_order__get_connections(_dev, &v39__ret_connections))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        connections = v39__ret_connections;
    }
    return connections;
}

static bool _DML_IFACE_b__instrumentation_order__move_before(conf_object_t *_obj, conf_object_t *connection, conf_object_t *before)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    bool success = 0;
    {
        bool v40__ret_success UNUSED  = 0;
        if (_DML_M_b__instrumentation_order__move_before(_dev, connection, before, &v40__ret_success))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        success = v40__ret_success;
    }
    return success;
}

static attr_value_t _DML_PIFACE_b__int_register__all_registers(conf_object_t *_obj)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    attr_value_t vals;
    memset((void *)&vals, 0, sizeof(attr_value_t ));
    {
        attr_value_t v41__ret_vals UNUSED ;
        memset((void *)&v41__ret_vals, 0, sizeof(attr_value_t ));
        if (_DML_M_b__int_register__all_registers(_dev, &v41__ret_vals))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        vals = v41__ret_vals;
    }
    return vals;
}

static char const *_DML_PIFACE_b__int_register__get_name(conf_object_t *_obj, int num)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    char const *name = NULL;
    {
        char const *v42__ret_name UNUSED  = NULL;
        if (_DML_M_b__int_register__get_name(_dev, num, &v42__ret_name))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        name = v42__ret_name;
    }
    return name;
}

static int _DML_PIFACE_b__int_register__get_number(conf_object_t *_obj, char const *name)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    int num = 0;
    {
        int v43__ret_num UNUSED  = 0;
        if (_DML_M_b__int_register__get_number(_dev, name, &v43__ret_num))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        num = v43__ret_num;
    }
    return num;
}

static uint64 _DML_PIFACE_b__int_register__read(conf_object_t *_obj, int num)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    uint64 val = 0;
    {
        uint64 v44__ret_val UNUSED  = 0;
        if (_DML_M_b__int_register__read(_dev, num, &v44__ret_val))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        val = v44__ret_val;
    }
    return val;
}

static int _DML_PIFACE_b__int_register__register_info(conf_object_t *_obj, int reg, ireg_info_t reqinfo)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    int info = 0;
    {
        int v45__ret_info UNUSED  = 0;
        if (_DML_M_b__int_register__register_info(_dev, reg, reqinfo, &v45__ret_info))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        info = v45__ret_info;
    }
    return info;
}

static void  _DML_PIFACE_b__int_register__write(conf_object_t *_obj, int num, uint64 val)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    if (_DML_M_b__int_register__write(_dev, num, val))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static attr_value_t _DML_IFACE_b__int_register__all_registers(conf_object_t *_obj)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    attr_value_t vals;
    memset((void *)&vals, 0, sizeof(attr_value_t ));
    {
        attr_value_t v47__ret_vals UNUSED ;
        memset((void *)&v47__ret_vals, 0, sizeof(attr_value_t ));
        if (_DML_M_b__int_register__all_registers(_dev, &v47__ret_vals))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        vals = v47__ret_vals;
    }
    return vals;
}

static char const *_DML_IFACE_b__int_register__get_name(conf_object_t *_obj, int num)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    char const *name = NULL;
    {
        char const *v48__ret_name UNUSED  = NULL;
        if (_DML_M_b__int_register__get_name(_dev, num, &v48__ret_name))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        name = v48__ret_name;
    }
    return name;
}

static int _DML_IFACE_b__int_register__get_number(conf_object_t *_obj, char const *name)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    int num = 0;
    {
        int v49__ret_num UNUSED  = 0;
        if (_DML_M_b__int_register__get_number(_dev, name, &v49__ret_num))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        num = v49__ret_num;
    }
    return num;
}

static uint64 _DML_IFACE_b__int_register__read(conf_object_t *_obj, int num)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    uint64 val = 0;
    {
        uint64 v50__ret_val UNUSED  = 0;
        if (_DML_M_b__int_register__read(_dev, num, &v50__ret_val))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        val = v50__ret_val;
    }
    return val;
}

static int _DML_IFACE_b__int_register__register_info(conf_object_t *_obj, int reg, ireg_info_t reqinfo)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    int info = 0;
    {
        int v51__ret_info UNUSED  = 0;
        if (_DML_M_b__int_register__register_info(_dev, reg, reqinfo, &v51__ret_info))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        info = v51__ret_info;
    }
    return info;
}

static void  _DML_IFACE_b__int_register__write(conf_object_t *_obj, int num, uint64 val)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    if (_DML_M_b__int_register__write(_dev, num, val))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static exception_type_t _DML_PIFACE_b__io_memory__operation(conf_object_t *_obj, generic_transaction_t *mem_op, map_info_t map_info)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    exception_type_t ex = 0;
    {
        exception_type_t v53__ret_ex UNUSED  = 0;
        if (_DML_M_b__io_memory__operation(_dev, mem_op, map_info, &v53__ret_ex))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        ex = v53__ret_ex;
    }
    return ex;
}

static exception_type_t _DML_IFACE_b__io_memory__operation(conf_object_t *_obj, generic_transaction_t *mem_op, map_info_t map_info)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    exception_type_t ex = 0;
    {
        exception_type_t v54__ret_ex UNUSED  = 0;
        if (_DML_M_b__io_memory__operation(_dev, mem_op, map_info, &v54__ret_ex))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        ex = v54__ret_ex;
    }
    return ex;
}

static bool _DML_PIFACE_b__register_view__big_endian_bitorder(conf_object_t *_obj)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    bool big_endian = 0;
    {
        bool v55__ret_big_endian UNUSED  = 0;
        if (_DML_M_b__register_view__big_endian_bitorder(_dev, &v55__ret_big_endian))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        big_endian = v55__ret_big_endian;
    }
    return big_endian;
}

static char const *_DML_PIFACE_b__register_view__description(conf_object_t *_obj)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    char const *desc = NULL;
    {
        char const *v56__ret_desc UNUSED  = NULL;
        if (_DML_M_b__register_view__description(_dev, &v56__ret_desc))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        desc = v56__ret_desc;
    }
    return desc;
}

static uint64 _DML_PIFACE_b__register_view__get_register_value(conf_object_t *_obj, uint32 reg)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    uint64 val = 0;
    {
        uint64 v57__ret_val UNUSED  = 0;
        if (_DML_M_b__register_view__get_register_value(_dev, reg, &v57__ret_val))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        val = v57__ret_val;
    }
    return val;
}

static uint32 _DML_PIFACE_b__register_view__number_of_registers(conf_object_t *_obj)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    uint32 num = 0;
    {
        uint32 v58__ret_num UNUSED  = 0;
        if (_DML_M_b__register_view__number_of_registers(_dev, &v58__ret_num))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        num = v58__ret_num;
    }
    return num;
}

static attr_value_t _DML_PIFACE_b__register_view__register_info(conf_object_t *_obj, uint32 reg)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    attr_value_t info;
    memset((void *)&info, 0, sizeof(attr_value_t ));
    {
        attr_value_t v59__ret_info UNUSED ;
        memset((void *)&v59__ret_info, 0, sizeof(attr_value_t ));
        if (_DML_M_b__register_view__register_info(_dev, reg, &v59__ret_info))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        info = v59__ret_info;
    }
    return info;
}

static void  _DML_PIFACE_b__register_view__set_register_value(conf_object_t *_obj, uint32 reg, uint64 val)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    if (_DML_M_b__register_view__set_register_value(_dev, reg, val))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static bool _DML_IFACE_b__register_view__big_endian_bitorder(conf_object_t *_obj)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    bool big_endian = 0;
    {
        bool v61__ret_big_endian UNUSED  = 0;
        if (_DML_M_b__register_view__big_endian_bitorder(_dev, &v61__ret_big_endian))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        big_endian = v61__ret_big_endian;
    }
    return big_endian;
}

static char const *_DML_IFACE_b__register_view__description(conf_object_t *_obj)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    char const *desc = NULL;
    {
        char const *v62__ret_desc UNUSED  = NULL;
        if (_DML_M_b__register_view__description(_dev, &v62__ret_desc))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        desc = v62__ret_desc;
    }
    return desc;
}

static uint64 _DML_IFACE_b__register_view__get_register_value(conf_object_t *_obj, uint32 reg)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    uint64 val = 0;
    {
        uint64 v63__ret_val UNUSED  = 0;
        if (_DML_M_b__register_view__get_register_value(_dev, reg, &v63__ret_val))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        val = v63__ret_val;
    }
    return val;
}

static uint32 _DML_IFACE_b__register_view__number_of_registers(conf_object_t *_obj)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    uint32 num = 0;
    {
        uint32 v64__ret_num UNUSED  = 0;
        if (_DML_M_b__register_view__number_of_registers(_dev, &v64__ret_num))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        num = v64__ret_num;
    }
    return num;
}

static attr_value_t _DML_IFACE_b__register_view__register_info(conf_object_t *_obj, uint32 reg)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    attr_value_t info;
    memset((void *)&info, 0, sizeof(attr_value_t ));
    {
        attr_value_t v65__ret_info UNUSED ;
        memset((void *)&v65__ret_info, 0, sizeof(attr_value_t ));
        if (_DML_M_b__register_view__register_info(_dev, reg, &v65__ret_info))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        info = v65__ret_info;
    }
    return info;
}

static void  _DML_IFACE_b__register_view__set_register_value(conf_object_t *_obj, uint32 reg, uint64 val)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    if (_DML_M_b__register_view__set_register_value(_dev, reg, val))
    SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
}

static attr_value_t _DML_PIFACE_b__register_view_catalog__register_names(conf_object_t *_obj)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    attr_value_t ret;
    memset((void *)&ret, 0, sizeof(attr_value_t ));
    {
        attr_value_t v67__ret_ret UNUSED ;
        memset((void *)&v67__ret_ret, 0, sizeof(attr_value_t ));
        if (_DML_M_b__register_view_catalog__register_names(_dev, &v67__ret_ret))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        ret = v67__ret_ret;
    }
    return ret;
}

static attr_value_t _DML_PIFACE_b__register_view_catalog__register_offsets(conf_object_t *_obj)
{
    _port_object_t *_portobj = (_port_object_t *)_obj;
    test_t *_dev UNUSED = (test_t *)_portobj->dev;
    attr_value_t ret;
    memset((void *)&ret, 0, sizeof(attr_value_t ));
    {
        attr_value_t v68__ret_ret UNUSED ;
        memset((void *)&v68__ret_ret, 0, sizeof(attr_value_t ));
        if (_DML_M_b__register_view_catalog__register_offsets(_dev, &v68__ret_ret))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        ret = v68__ret_ret;
    }
    return ret;
}

static attr_value_t _DML_IFACE_b__register_view_catalog__register_names(conf_object_t *_obj)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    attr_value_t ret;
    memset((void *)&ret, 0, sizeof(attr_value_t ));
    {
        attr_value_t v69__ret_ret UNUSED ;
        memset((void *)&v69__ret_ret, 0, sizeof(attr_value_t ));
        if (_DML_M_b__register_view_catalog__register_names(_dev, &v69__ret_ret))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        ret = v69__ret_ret;
    }
    return ret;
}

static attr_value_t _DML_IFACE_b__register_view_catalog__register_offsets(conf_object_t *_obj)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    attr_value_t ret;
    memset((void *)&ret, 0, sizeof(attr_value_t ));
    {
        attr_value_t v70__ret_ret UNUSED ;
        memset((void *)&v70__ret_ret, 0, sizeof(attr_value_t ));
        if (_DML_M_b__register_view_catalog__register_offsets(_dev, &v70__ret_ret))
        SIM_LOG_ERROR(_dev->b._obj, 0, "Uncaught DML exception");
        ret = v70__ret_ret;
    }
    return ret;
}

static conf_object_t *
test_alloc(conf_class_t *cls)
{
    test_t *_dev = MM_ZALLOC(1, test_t);
    _dev->_immediate_after_state = MM_ZALLOC(1, _dml_immediate_after_state_t);
    return &_dev->obj;
}

static lang_void *
test_init(conf_object_t *_obj)
{
    test_t *_dev = (test_t*)_obj;
    _init_port_objs(_dev);
    _init_static_vars(_dev);
    _init_data_objs(_dev);
    ht_init_int_table(&(_dev->_subsequent_log_ht));
    QINIT(_dev->_immediate_after_state->queue);
    if (_DML_M_init(_dev))
    return 0;
    if (_DML_M_hard_reset(_dev))
    return 0;
    SIM_add_notifier(_obj, Sim_Notify_Object_Delete, _obj, test_pre_delete, NULL);
    return _obj;
}

static void test_finalize(conf_object_t *_obj)
{
    test_t *_dev UNUSED = (test_t *)_obj;
}

static void test_objects_finalized(conf_object_t *_obj)
{
    test_t *_dev UNUSED = (test_t *)_obj;
    _dev->_immediate_after_state->warn_upon_deletion = true;
    _DML_execute_immediate_afters_now(_obj, _dev->_immediate_after_state);
}

static void test_pre_delete(conf_object_t *_subscriber, conf_object_t *_obj, lang_void *_data)
{
    test_t *_dev = (test_t *)_obj;
    _DML_pre_delete_cancel_immediate_afters(_obj, _dev->_immediate_after_state);
    if (SIM_object_clock(_obj)) {
        _cancel_simple_delay_events(_obj, SIM_object_clock(_obj), NULL);
        _cancel_simple_delay_events(_obj, SIM_picosecond_clock(_obj), NULL);
    }
    test_deinit(_obj);
}

static void test_deinit(conf_object_t *_obj)
{
    test_t *_dev UNUSED = (test_t *)_obj;
    _DML_execute_immediate_afters_now(_obj, _dev->_immediate_after_state);
    _free_table(&_dev->_subsequent_log_ht);
    QFREE(_dev->_immediate_after_state->queue);
    if (likely(!_dev->_immediate_after_state->posted)) {
        MM_FREE(_dev->_immediate_after_state);
    } else {
        _dev->_immediate_after_state->deleted = true;
    }
}

static void test_dealloc(conf_object_t *dev)
{
    MM_FREE(dev);
}

static const _id_info_t _id_infos[10] UNUSED = {
    {"dev", NULL, 0, 1},
    {"a", NULL, 0, 2},
    {"b.bank_instrumentation_subscribe", NULL, 0, 3},
    {"b.instrumentation_order", NULL, 0, 4},
    {"b.int_register", NULL, 0, 5},
    {"b.io_memory", NULL, 0, 6},
    {"b.register_view", NULL, 0, 7},
    {"b.register_view_catalog", NULL, 0, 8},
    {"b", NULL, 0, 9},
    {"p", NULL, 0, 10}
};
static ht_str_table_t _id_info_ht UNUSED = HT_STR_NULL(false);
static void * const _object_vtables[10] UNUSED = {(&_tr__dev__object), (&_tr_a__object), (&_tr_b_bank_instrumentation_subscribe__object), (&_tr_b_instrumentation_order__object), (&_tr_b_int_register__object), (&_tr_b_io_memory__object), (&_tr_b_register_view__object), (&_tr_b_register_view_catalog__object), (&_tr_b__object), (&_tr_p__object)};
static void _startup_calls(void)
{
}
static void _init_data_objs(test_t *_dev)
{
    #line 274 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    _dev->_has_state_callbacks = 0;
    #line 859 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
    #line 273 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    _dev->_issuing_state_callbacks = 0;
    #line 862 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
}

void
hard_reset_test(test_t *_obj)
{
    test_t *_dev UNUSED = (test_t *)_obj;

    if (_DML_M_hard_reset(_dev))
    SIM_LOG_ERROR(&_dev->obj, 0, "Uncaught DML exception");
}

void
soft_reset_test(test_t *_obj)
{
    test_t *_dev UNUSED = (test_t *)_obj;

    if (_DML_M_soft_reset(_dev))
    SIM_LOG_ERROR(&_dev->obj, 0, "Uncaught DML exception");
}

/* t.shared_dml12 */
static bool _DML_TM_t__shared_dml12(test_t *_dev, t _t)
#line 14 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 14 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 0;
    #line 14 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 891 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
/* init */
static bool _DML_M_init(test_t *_dev)
#line 93 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    _DML_M_p__call_all(_dev);
    return 0;
    #line 95 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 900 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.call_all */
static void  _DML_M_p__call_all(test_t *_dev)
#line 8 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
{
    #line 11 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad1(_dev))
    #line 11 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw2;
    if (_DML_M_p__throwing(_dev))
    #line 12 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw2;
    if (false) throw2:
    #line 13 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    {
        #line 13 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    }
    #line 15 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__good1(_dev))
    #line 15 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw3;
    #line 15 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw3:
    #line 15 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 15, 0);
    if (_DML_M_p__good2(_dev))
    #line 16 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw4;
    #line 16 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw4:
    #line 16 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 16, 0);
    #line 18 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad1(_dev))
    #line 18 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw5;
    #line 18 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw5:
    #line 18 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 18, 0);
    #line 21 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad1(_dev))
    #line 21 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw6;
    #line 21 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw6:
    #line 21 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 21, 0);
    #line 23 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad2(_dev))
    #line 23 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw7;
    #line 23 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw7:
    #line 23 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 23, 0);
    #line 25 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad3(_dev))
    #line 25 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw8;
    #line 25 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw8:
    #line 25 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 25, 0);
    #line 27 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad4(_dev))
    #line 27 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw9;
    #line 27 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw9:
    #line 27 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 27, 0);
    #line 29 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad5(_dev))
    #line 29 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw10;
    #line 29 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw10:
    #line 29 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 29, 0);
    #line 31 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad6(_dev))
    #line 31 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw11;
    #line 31 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw11:
    #line 31 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 31, 0);
    #line 33 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad7(_dev))
    #line 33 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw12;
    #line 33 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw12:
    #line 33 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 33, 0);
    #line 35 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad8(_dev))
    #line 35 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw13;
    #line 35 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw13:
    #line 35 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 35, 0);
    #line 37 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad9(_dev))
    #line 37 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw14;
    #line 37 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw14:
    #line 37 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 37, 0);
    #line 41 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_a__set(_dev, SIM_make_attr_nil()))
    #line 41 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    goto throw15;
    #line 41 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (false) throw15:
    #line 41 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    DML_ASSERT("C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\modules\\dmlc\\test\\1.2\\errors\\EBADFAIL_dml14.dml", 41, 0);
    return;
    #line 42 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
}
#line 1024 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.bad9 */
static bool _DML_M_p__bad9(test_t *_dev)
#line 72 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 72 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    {
        bool v107_ok UNUSED  = 0;
        #line 75 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
        {
            #line 75 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
            generic_transaction_t *v108_memop UNUSED  = NULL;
            #line 87 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
            bool v108_success UNUSED  = 0;
            #line 87 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
            v107_ok = v108_success;
            #line 75 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
        }
    }
    #line 76 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 0;
    #line 76 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1048 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.bad8 */
static bool _DML_M_p__bad8(test_t *_dev)
#line 66 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 66 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    {
        bool v111_ok UNUSED  = 0;
        uint64 v111_val UNUSED  = 0;
        #line 70 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
        {
            #line 70 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
            bool v112__ret_success UNUSED  = 0;
            #line 70 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
            uint64 v112__ret_readvalue UNUSED  = 0;
            #line 70 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
            if (_DML_M_b__read_access(_dev, NULL, 0, 0, &v112__ret_success, &v112__ret_readvalue))
            #line 70 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
            return 1;
            #line 70 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
            v111_ok = v112__ret_success;
            #line 70 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
            v111_val = v112__ret_readvalue;
            #line 1072 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
        }
        #line 71 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    }
    #line 71 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 0;
    #line 71 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1080 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.read_access */
static bool _DML_M_b__read_access(test_t *_dev, generic_transaction_t *memop, physical_address_t offset, physical_address_t size, bool *success, uint64 *readvalue)
#line 86 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 86 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    bool v113_success UNUSED  = 0;
    #line 86 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    uint64 v113_readvalue UNUSED  = 0;
    #line 86 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    *success = v113_success;
    #line 86 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    *readvalue = v113_readvalue;
    #line 86 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 0;
    #line 86 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1098 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.bad7 */
static bool _DML_M_p__bad7(test_t *_dev)
#line 62 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 64 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    if (_DML_M_a__set(_dev, SIM_make_attr_nil()))
    #line 64 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 1;
    return 0;
    #line 65 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1111 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.bad6 */
static bool _DML_M_p__bad6(test_t *_dev)
#line 55 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 41 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    if (_DML_TM_t__shared_dml12(_dev, ((t) {(&_tr_p__t), ((_identity_t) {.id = 10, .encoded_index = 0})})))
    #line 41 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 1;
    #line 58 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 0;
    #line 58 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1125 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.bad5 */
static bool _DML_M_p__bad5(test_t *_dev)
#line 51 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 53 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    if (_DML_M_p__bad2(_dev))
    #line 53 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 1;
    return 0;
    #line 54 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1138 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.bad4 */
static bool _DML_M_p__bad4(test_t *_dev)
#line 47 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 49 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    if (_DML_M_p__bad2(_dev))
    #line 49 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 1;
    return 0;
    #line 50 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1151 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.bad3 */
static bool _DML_M_p__bad3(test_t *_dev)
#line 43 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 45 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    if (_DML_TM_t__shared_dml12(_dev, ((t) {(&_tr_p__t), ((_identity_t) {.id = 10, .encoded_index = 0})})))
    #line 45 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 1;
    return 0;
    #line 46 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1164 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.bad2 */
static bool _DML_M_p__bad2(test_t *_dev)
#line 39 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 41 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    if (_DML_TM_t__shared_dml12(_dev, ((t) {(&_tr_p__t), ((_identity_t) {.id = 10, .encoded_index = 0})})))
    #line 41 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 1;
    return 0;
    #line 42 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1177 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.good2 */
static bool _DML_M_p__good2(test_t *_dev)
#line 21 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    if (_DML_M_p__good1(_dev))
    #line 22 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 1;
    if (_DML_M_p__good1(_dev))
    #line 23 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 1;
    #line 25 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    if (_DML_M_p__bad1(_dev))
    #line 25 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    goto throw16;
    if (_DML_M_p__bad1(_dev))
    #line 26 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    goto throw16;
    if (_DML_TM_t__shared_dml12(_dev, ((t) {(&_tr_p__t), ((_identity_t) {.id = 10, .encoded_index = 0})})))
    #line 27 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    goto throw16;
    if (_DML_TM_t__shared_dml12(_dev, ((t) {(&_tr_p__t), ((_identity_t) {.id = 10, .encoded_index = 0})})))
    #line 28 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    goto throw16;
    if (false) throw16:
    #line 29 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    {
        #line 29 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    }
    return 0;
    #line 30 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1210 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.good1 */
static bool _DML_M_p__good1(test_t *_dev)
#line 19 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    return 0;
    #line 20 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1219 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.throwing */
static bool _DML_M_p__throwing(test_t *_dev)
#line 43 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
{
    #line 45 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    if (_DML_M_p__bad0(_dev))
    #line 45 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
    return 1;
    return 0;
    #line 46 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\EBADFAIL_dml14.dml"
}
#line 1232 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.bad0 */
static bool _DML_M_p__bad0(test_t *_dev)
#line 31 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    return 1;
    return 0;
    #line 33 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1242 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* p.bad1 */
static bool _DML_M_p__bad1(test_t *_dev)
#line 34 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 36 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 1;
    return 0;
    #line 37 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1253 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.register_view_catalog.register_offsets */
static bool _DML_M_b__register_view_catalog__register_offsets(test_t *_dev, attr_value_t *ret)
#line 1138 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1138 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    attr_value_t v153_ret UNUSED ;
    #line 1138 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    memset((void *)&v153_ret, 0, sizeof(attr_value_t ));
    #line 1138 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        uint64 v154_table_size UNUSED  = 0;
        {
            #line 1140 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            uint32 v155__ret_num UNUSED  = 0;
            #line 1140 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            if (_DML_M_b__register_view__number_of_registers(_dev, &v155__ret_num))
            #line 1140 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            return 1;
            #line 1140 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            v154_table_size = v155__ret_num;
            #line 1275 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
        }
        #line 1141 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v153_ret = SIM_alloc_attr_list(v154_table_size);
        int v154_i UNUSED  = 0;
        for (v154_i = 0; v154_i < v154_table_size; (v154_i)++)
        #line 1143 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        {
            attr_value_t v156_full_info UNUSED ;
            #line 1144 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            {
                #line 1144 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                attr_value_t v157__ret_info UNUSED ;
                #line 1144 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                memset((void *)&v157__ret_info, 0, sizeof(attr_value_t ));
                #line 1144 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                if (_DML_M_b__register_view__register_info(_dev, v154_i, &v157__ret_info))
                #line 1144 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                return 1;
                #line 1144 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                v156_full_info = v157__ret_info;
                #line 1296 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
            }
            #line 1148 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            SIM_attr_list_set_item(&v153_ret, v154_i, SIM_attr_copy(SIM_attr_list_item(v156_full_info, 3)));
            SIM_attr_free(&v156_full_info);
        }
    }
    #line 1151 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    *ret = v153_ret;
    #line 1151 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1151 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1309 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.register_view_catalog.register_names */
static bool _DML_M_b__register_view_catalog__register_names(test_t *_dev, attr_value_t *ret)
#line 1124 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1124 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    attr_value_t v158_ret UNUSED ;
    #line 1124 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    memset((void *)&v158_ret, 0, sizeof(attr_value_t ));
    #line 1124 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        uint64 v159_table_size UNUSED  = 0;
        {
            #line 1126 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            uint32 v160__ret_num UNUSED  = 0;
            #line 1126 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            if (_DML_M_b__register_view__number_of_registers(_dev, &v160__ret_num))
            #line 1126 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            return 1;
            #line 1126 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            v159_table_size = v160__ret_num;
            #line 1331 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
        }
        #line 1127 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v158_ret = SIM_alloc_attr_list(v159_table_size);
        int v159_i UNUSED  = 0;
        for (v159_i = 0; v159_i < v159_table_size; (v159_i)++)
        #line 1129 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        {
            attr_value_t v161_full_info UNUSED ;
            #line 1130 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            {
                #line 1130 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                attr_value_t v162__ret_info UNUSED ;
                #line 1130 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                memset((void *)&v162__ret_info, 0, sizeof(attr_value_t ));
                #line 1130 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                if (_DML_M_b__register_view__register_info(_dev, v159_i, &v162__ret_info))
                #line 1130 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                return 1;
                #line 1130 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                v161_full_info = v162__ret_info;
                #line 1352 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
            }
            #line 1134 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            SIM_attr_list_set_item(&v158_ret, v159_i, SIM_attr_copy(SIM_attr_list_item(v161_full_info, 0)));
            SIM_attr_free(&v161_full_info);
        }
    }
    #line 1137 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    *ret = v158_ret;
    #line 1137 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1137 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1365 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.register_view.set_register_value */
static bool _DML_M_b__register_view__set_register_value(test_t *_dev, uint32 reg, uint64 val)
#line 1105 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1105 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        attr_value_t v164_args UNUSED ;
        #line 1106 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v164_args, 0, sizeof(attr_value_t ));
        #line 1116 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v164_args = SIM_make_attr_list(8, SIM_make_attr_string("test"), SIM_make_attr_string("b"), SIM_make_attr_string("b"), SIM_make_attr_uint64(reg), SIM_make_attr_object(&_dev->obj), SIM_make_attr_uint64(0), SIM_make_attr_boolean(1), SIM_make_attr_uint64(val));
        #line 1118 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        VT_call_python_module_function("register_view", "set_register_value", &v164_args);
        #line 1120 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        SIM_attr_free(&v164_args);
    }
    #line 1121 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1121 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1387 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.register_view.register_info */
static bool _DML_M_b__register_view__register_info(test_t *_dev, uint32 reg, attr_value_t *info)
#line 1072 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1072 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    attr_value_t v165_info UNUSED ;
    #line 1072 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    memset((void *)&v165_info, 0, sizeof(attr_value_t ));
    #line 1072 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        attr_value_t v166_args UNUSED ;
        #line 1073 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v166_args, 0, sizeof(attr_value_t ));
        #line 1078 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v166_args = SIM_make_attr_list(3, SIM_make_attr_string("test"), SIM_make_attr_string("b"), SIM_make_attr_uint64(reg));
        #line 1082 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v165_info = VT_call_python_module_function("register_view", "register_info", &v166_args);
        SIM_attr_free(&v166_args);
    }
    #line 1084 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    *info = v165_info;
    #line 1084 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1084 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1414 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.register_view.number_of_registers */
static bool _DML_M_b__register_view__number_of_registers(test_t *_dev, uint32 *num)
#line 1056 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1056 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    uint32 v167_num UNUSED  = 0;
    #line 1056 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        attr_value_t v168_args UNUSED ;
        #line 1057 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v168_args, 0, sizeof(attr_value_t ));
        #line 1061 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v168_args = SIM_make_attr_list(2, SIM_make_attr_string("test"), SIM_make_attr_string("b"));
        #line 1063 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        attr_value_t v168_ret UNUSED ;
        #line 1063 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v168_ret, 0, sizeof(attr_value_t ));
        #line 1066 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v168_ret = VT_call_python_module_function("register_view", "number_of_registers", &v168_args);
        SIM_attr_free(&v168_args);
        #line 1069 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v167_num = SIM_attr_integer(v168_ret);
        SIM_attr_free(&v168_ret);
    }
    #line 1071 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    *num = v167_num;
    #line 1071 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1071 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1446 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.register_view.get_register_value */
static bool _DML_M_b__register_view__get_register_value(test_t *_dev, uint32 reg, uint64 *val)
#line 1085 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1085 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    uint64 v169_val UNUSED  = 0;
    #line 1085 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        attr_value_t v170_args UNUSED ;
        #line 1086 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v170_args, 0, sizeof(attr_value_t ));
        #line 1095 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v170_args = SIM_make_attr_list(7, SIM_make_attr_string("test"), SIM_make_attr_string("b"), SIM_make_attr_string("b"), SIM_make_attr_uint64(reg), SIM_make_attr_object(&_dev->obj), SIM_make_attr_uint64(0), SIM_make_attr_boolean(1));
        #line 1097 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        attr_value_t v170_ret UNUSED ;
        #line 1097 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v170_ret, 0, sizeof(attr_value_t ));
        #line 1099 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v170_ret = VT_call_python_module_function("register_view", "get_register_value", &v170_args);
        SIM_attr_free(&v170_args);
        #line 1102 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v169_val = SIM_attr_integer(v170_ret);
        SIM_attr_free(&v170_ret);
    }
    #line 1104 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    *val = v169_val;
    #line 1104 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1104 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1478 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.register_view.description */
static bool _DML_M_b__register_view__description(test_t *_dev, char const **desc)
#line 1026 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1026 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    char const *v171_desc UNUSED  = NULL;
    #line 1026 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        attr_value_t v172_args UNUSED ;
        #line 1027 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v172_args, 0, sizeof(attr_value_t ));
        #line 1031 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v172_args = SIM_make_attr_list(2, SIM_make_attr_string("test"), SIM_make_attr_string("b"));
        #line 1033 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        attr_value_t v172_ret UNUSED ;
        #line 1033 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v172_ret, 0, sizeof(attr_value_t ));
        #line 1036 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v172_ret = VT_call_python_module_function("register_view", "description", &v172_args);
        SIM_attr_free(&v172_args);
        v171_desc = SIM_attr_string(v172_ret);
    }
    #line 1039 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    *desc = v171_desc;
    #line 1039 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1039 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1508 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.register_view.big_endian_bitorder */
static bool _DML_M_b__register_view__big_endian_bitorder(test_t *_dev, bool *big_endian)
#line 1040 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1040 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    bool v173_big_endian UNUSED  = 0;
    #line 1040 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        attr_value_t v174_args UNUSED ;
        #line 1041 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v174_args, 0, sizeof(attr_value_t ));
        #line 1045 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v174_args = SIM_make_attr_list(2, SIM_make_attr_string("test"), SIM_make_attr_string("b"));
        #line 1047 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        attr_value_t v174_ret UNUSED ;
        #line 1047 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v174_ret, 0, sizeof(attr_value_t ));
        #line 1050 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v174_ret = VT_call_python_module_function("register_view", "big_endian_bitorder", &v174_args);
        SIM_attr_free(&v174_args);
        #line 1053 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v173_big_endian = SIM_attr_boolean(v174_ret);
        SIM_attr_free(&v174_ret);
    }
    #line 1055 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    *big_endian = v173_big_endian;
    #line 1055 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1055 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1540 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.io_memory.operation */
static bool _DML_M_b__io_memory__operation(test_t *_dev, generic_transaction_t *mem_op, map_info_t map_info, exception_type_t *ex)
#line 876 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 876 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    exception_type_t v175_ex UNUSED  = 0;
    v175_ex = 0x401;
    #line 879 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    if (_DML_M_b__access(_dev, mem_op, SIM_get_mem_op_physical_address(mem_op) - map_info.base + map_info.start, SIM_get_mem_op_size(mem_op)))
    #line 879 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    goto throw17;
    #line 884 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    if (false) throw17:
    #line 884 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    v175_ex = 0x407;
    *ex = v175_ex;
    #line 885 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 885 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1562 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.access */
static bool _DML_M_b__access(test_t *_dev, generic_transaction_t *memop, physical_address_t offset, physical_address_t size)
#line 449 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    if (size > 8)
    #line 450 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        SIM_LOG_ERROR(_dev->b._obj, 0, "Oversized access to %s", "b");
        return 1;
    }
    if (SIM_mem_op_is_read(memop))
    {
        #line 455 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        generic_transaction_t *v182_memop UNUSED  = memop;
        #line 455 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        physical_address_t v182_offset UNUSED  = offset;
        #line 455 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        physical_address_t v182_size UNUSED  = size;
        #line 487 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        {
            bool v183_success UNUSED  = 0;
            uint64 v183_val UNUSED  = 0;
            {
                #line 490 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                bool v184__ret_success UNUSED  = 0;
                #line 490 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                uint64 v184__ret_readvalue UNUSED  = 0;
                #line 490 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                if (_DML_M_b__read_access(_dev, v182_memop, v182_offset, v182_size, &v184__ret_success, &v184__ret_readvalue))
                #line 490 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                return 1;
                #line 490 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                v183_success = v184__ret_success;
                #line 490 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                v183_val = v184__ret_readvalue;
                #line 1599 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
            }
            #line 491 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            if (!v183_success)
            {
                #line 617 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                bool v186_success UNUSED  = 0;
                #line 617 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                uint64 v186_value UNUSED  = 0;
                #line 619 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                v186_success = 0;
                #line 617 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                v183_success = v186_success;
                #line 617 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                v183_val = v186_value;
                #line 492 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            }
            #line 494 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            if (!v183_success)
            {
                #line 495 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                generic_transaction_t *v189_memop UNUSED  = v182_memop;
                #line 495 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                physical_address_t v189_offset UNUSED  = v182_offset;
                #line 495 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                physical_address_t v189_size UNUSED  = v182_size;
                #line 762 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                SIM_LOG_INFO(4, _dev->b._obj, 0, "Missed in bank %s", "b");
                #line 768 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                _DML_M_b__log_miss(_dev, v189_memop, v189_offset, v189_size);
                return 1;
                #line 495 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            }
            else
            {
                #line 497 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                generic_transaction_t *v194_memop UNUSED  = v182_memop;
                #line 497 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                uint64 v194_val UNUSED  = v183_val;
                #line 502 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                {
                    #line 502 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    generic_transaction_t *v196_memop UNUSED  = v194_memop;
                    #line 502 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    uint64 v196_value UNUSED  = v194_val;
                    #line 478 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    SIM_set_mem_op_value_le(v196_memop, v196_value);
                    #line 502 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                }
                #line 497 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            }
            #line 499 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        }
        #line 455 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    }
    else
    #line 456 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        uint64 v198_writeval UNUSED  = 0;
        {
            #line 458 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            generic_transaction_t *v199_memop UNUSED  = memop;
            #line 463 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            uint64 v199_writeval UNUSED  = 0;
            #line 467 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            v199_writeval = SIM_get_mem_op_value_le(v199_memop);
            #line 463 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            v198_writeval = v199_writeval;
            #line 458 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        }
        {
            #line 459 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            generic_transaction_t *v201_memop UNUSED  = memop;
            #line 459 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            physical_address_t v201_offset UNUSED  = offset;
            #line 459 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            physical_address_t v201_size UNUSED  = size;
            #line 459 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            uint64 v201_value UNUSED  = v198_writeval;
            #line 624 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            {
                bool v202_success UNUSED  = 0;
                {
                    #line 626 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    bool v203__ret_success UNUSED  = 0;
                    #line 626 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    if (_DML_M_b__write_access(_dev, v201_memop, v201_offset, v201_size, v201_value, &v203__ret_success))
                    #line 626 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    return 1;
                    #line 626 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    v202_success = v203__ret_success;
                    #line 1690 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
                }
                #line 627 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                if (!v202_success)
                {
                    #line 724 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    bool v205_success UNUSED  = 0;
                    #line 727 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    v205_success = 0;
                    #line 724 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    v202_success = v205_success;
                    #line 628 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                }
                #line 630 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                if (!v202_success)
                {
                    #line 631 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    generic_transaction_t *v208_memop UNUSED  = v201_memop;
                    #line 631 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    physical_address_t v208_offset UNUSED  = v201_offset;
                    #line 631 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    physical_address_t v208_size UNUSED  = v201_size;
                    #line 762 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    SIM_LOG_INFO(4, _dev->b._obj, 0, "Missed in bank %s", "b");
                    #line 768 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                    _DML_M_b__log_miss(_dev, v208_memop, v208_offset, v208_size);
                    return 1;
                    #line 631 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                }
                else
                {
                    #line 633 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
                }
                #line 635 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
            }
            #line 459 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        }
    }
    return 0;
    #line 461 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1731 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.write_access */
static bool _DML_M_b__write_access(test_t *_dev, generic_transaction_t *memop, physical_address_t offset, physical_address_t size, uint64 writevalue, bool *success)
#line 90 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 90 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    bool v215_success UNUSED  = 0;
    #line 90 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    *success = v215_success;
    #line 90 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 0;
    #line 90 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 1745 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.log_miss */
static void  _DML_M_b__log_miss(test_t *_dev, generic_transaction_t *memop, physical_address_t offset, physical_address_t size)
#line 774 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    if (SIM_get_mem_op_inquiry(memop))
    goto exit47;
    if (SIM_mem_op_is_read(memop))
    SIM_LOG_SPEC_VIOLATION(1, _dev->b._obj, Register_Read, "%lld byte read access at offset %#llx%s (addr %#llx) outside registers or misaligned access", (uint64 )size, (uint64 )offset, " in b", (uint64 )SIM_get_mem_op_physical_address(memop));
    #line 783 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    else
    SIM_LOG_SPEC_VIOLATION(1, _dev->b._obj, Register_Write, "%lld byte write access at offset %#llx%s (addr %#llx) outside registers or misaligned access", (uint64 )size, (uint64 )offset, " in b", (uint64 )SIM_get_mem_op_physical_address(memop));
    #line 789 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
exit47: ;
    #line 789 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return;
    #line 789 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1764 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.int_register.write */
static bool _DML_M_b__int_register__write(test_t *_dev, int num, uint64 val)
#line 916 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1770 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
    return 0;
    #line 924 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1774 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.int_register.register_info */
static bool _DML_M_b__int_register__register_info(test_t *_dev, int reg, ireg_info_t reqinfo, int *info)
#line 941 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 941 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    int v219_info UNUSED  = 0;
    v219_info = 0;
    *info = v219_info;
    #line 943 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 943 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1788 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.int_register.read */
static bool _DML_M_b__int_register__read(test_t *_dev, int num, uint64 *val)
#line 905 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1794 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
    *val = 0ULL;
    return 0;
    #line 914 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1799 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.int_register.get_number */
static bool _DML_M_b__int_register__get_number(test_t *_dev, char const *name, int *num)
#line 893 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1805 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
    *num = (int32 )-1LL;
    return 0;
    #line 897 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1810 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.int_register.get_name */
static bool _DML_M_b__int_register__get_name(test_t *_dev, int num, char const **name)
#line 899 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1816 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"
    *name = NULL;
    return 0;
    #line 903 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1821 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.int_register.all_registers */
static bool _DML_M_b__int_register__all_registers(test_t *_dev, attr_value_t *vals)
#line 926 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 926 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    attr_value_t v221_vals UNUSED ;
    #line 926 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    memset((void *)&v221_vals, 0, sizeof(attr_value_t ));
    #line 926 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        #line 929 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        int v222_count UNUSED  = 0;
        #line 933 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        v221_vals = SIM_alloc_attr_list(v222_count);
        v222_count = 0;
        #line 939 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    }
    #line 939 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    *vals = v221_vals;
    #line 939 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 939 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1846 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.instrumentation_order.move_before */
static bool _DML_M_b__instrumentation_order__move_before(test_t *_dev, conf_object_t *connection, conf_object_t *before, bool *success)
#line 1018 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1018 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    bool v223_success UNUSED  = 0;
    v223_success = _move_before(connection, before, &_dev->b._connections);
    *success = v223_success;
    #line 1020 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1020 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1860 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.instrumentation_order.get_connections */
static bool _DML_M_b__instrumentation_order__get_connections(test_t *_dev, attr_value_t *connections)
#line 1014 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1014 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    attr_value_t v225_connections UNUSED ;
    #line 1014 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    memset((void *)&v225_connections, 0, sizeof(attr_value_t ));
    v225_connections = _get_connections(&_dev->b._connections);
    *connections = v225_connections;
    #line 1016 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1016 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1876 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.bank_instrumentation_subscribe.remove_connection_callbacks */
static bool _DML_M_b__bank_instrumentation_subscribe__remove_connection_callbacks(test_t *_dev, conf_object_t *connection)
#line 1002 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1004 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    _remove_connection_callbacks(_DML_M_b___non_anonymous_bank_obj(_dev), connection, &_dev->b._connections);
    return 0;
    #line 1005 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1887 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b._non_anonymous_bank_obj */
static conf_object_t *_DML_M_b___non_anonymous_bank_obj(test_t *_dev)
#line 506 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 506 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    conf_object_t *bank_obj UNUSED  = NULL;
    #line 508 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    if (_dev->b._cached_bank_obj == (NULL))
    #line 508 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    {
        char v232_name[(uint64 )_dml_strlen("b") + 6] UNUSED ;
        #line 509 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
        memset((void *)&v232_name, 0, sizeof(char [(uint64 )_dml_strlen("b") + 6]));
        _dml_strcpy(v232_name, "bank.");
        _dml_strcpy(v232_name + 5, "b");
        _dev->b._cached_bank_obj = SIM_object_descendant(&_dev->obj, v232_name);
    }
    bank_obj = _dev->b._cached_bank_obj;
    #line 518 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return bank_obj;
    #line 518 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1911 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.bank_instrumentation_subscribe.remove_callback */
static bool _DML_M_b__bank_instrumentation_subscribe__remove_callback(test_t *_dev, bank_callback_handle_t callback)
#line 995 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 999 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    _remove_callback(callback, &_dev->b._connections, &_dev->b._before_read_callbacks, &_dev->b._after_read_callbacks, &_dev->b._before_write_callbacks, &_dev->b._after_write_callbacks);
    return 0;
    #line 1000 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1922 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.bank_instrumentation_subscribe.register_before_write */
static bool _DML_M_b__bank_instrumentation_subscribe__register_before_write(test_t *_dev, conf_object_t *connection, uint64 offset, uint64 size, before_write_callback_t before_write, void  *user_data, bank_callback_handle_t *handle)
#line 977 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 977 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    bank_callback_handle_t v235_handle UNUSED  = 0;
    #line 981 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    v235_handle = _register_before_write(_DML_M_b___non_anonymous_bank_obj(_dev), connection, offset, size, before_write, user_data, &_dev->b._connections, &_dev->b._before_write_callbacks);
    *handle = v235_handle;
    #line 982 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 982 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1937 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.bank_instrumentation_subscribe.register_before_read */
static bool _DML_M_b__bank_instrumentation_subscribe__register_before_read(test_t *_dev, conf_object_t *connection, uint64 offset, uint64 size, before_read_callback_t before_read, void  *user_data, bank_callback_handle_t *handle)
#line 954 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 954 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    bank_callback_handle_t v237_handle UNUSED  = 0;
    #line 958 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    v237_handle = _register_before_read(_DML_M_b___non_anonymous_bank_obj(_dev), connection, offset, size, before_read, user_data, &_dev->b._connections, &_dev->b._before_read_callbacks);
    *handle = v237_handle;
    #line 959 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 959 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1952 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.bank_instrumentation_subscribe.register_after_write */
static bool _DML_M_b__bank_instrumentation_subscribe__register_after_write(test_t *_dev, conf_object_t *connection, uint64 offset, uint64 size, after_write_callback_t after_write, void  *user_data, bank_callback_handle_t *handle)
#line 988 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 988 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    bank_callback_handle_t v239_handle UNUSED  = 0;
    #line 992 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    v239_handle = _register_after_write(_DML_M_b___non_anonymous_bank_obj(_dev), connection, offset, size, after_write, user_data, &_dev->b._connections, &_dev->b._after_write_callbacks);
    *handle = v239_handle;
    #line 993 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 993 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1967 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.bank_instrumentation_subscribe.register_after_read */
static bool _DML_M_b__bank_instrumentation_subscribe__register_after_read(test_t *_dev, conf_object_t *connection, uint64 offset, uint64 size, after_read_callback_t after_read, void  *user_data, bank_callback_handle_t *handle)
#line 965 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 965 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    bank_callback_handle_t v241_handle UNUSED  = 0;
    #line 969 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    v241_handle = _register_after_read(_DML_M_b___non_anonymous_bank_obj(_dev), connection, offset, size, after_read, user_data, &_dev->b._connections, &_dev->b._after_read_callbacks);
    *handle = v241_handle;
    #line 970 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 970 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1982 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.bank_instrumentation_subscribe.enable_connection_callbacks */
static bool _DML_M_b__bank_instrumentation_subscribe__enable_connection_callbacks(test_t *_dev, conf_object_t *connection)
#line 1006 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    _enable_connection_callbacks(connection, &_dev->b._connections);
    return 0;
    #line 1008 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 1992 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.bank_instrumentation_subscribe.disable_connection_callbacks */
static bool _DML_M_b__bank_instrumentation_subscribe__disable_connection_callbacks(test_t *_dev, conf_object_t *connection)
#line 1009 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    _disable_connection_callbacks(connection, &_dev->b._connections);
    return 0;
    #line 1011 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 2002 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* a.after_set */
static bool _DML_M_a__after_set(test_t *_dev)
#line 297 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    return 0;
    #line 298 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 2011 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* a.set */
static bool _DML_M_a__set(test_t *_dev, attr_value_t a)
#line 81 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
{
    #line 81 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
    return 0;
    #line 81 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\modules\\\\dmlc\\\\test\\\\1.2\\\\errors\\\\T_EBADFAIL_dml12.dml"
}
#line 2021 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* a.before_set */
static bool _DML_M_a__before_set(test_t *_dev)
#line 294 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    return 0;
    #line 295 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 2030 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* soft_reset */
static bool _DML_M_soft_reset(test_t *_dev)
#line 1216 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 268 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    if (_DML_M_b__soft_reset(_dev))
    #line 268 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 1;
    #line 1218 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1218 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 2044 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.soft_reset */
static bool _DML_M_b__soft_reset(test_t *_dev)
#line 1216 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1218 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1218 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 2054 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* hard_reset */
static bool _DML_M_hard_reset(test_t *_dev)
#line 1211 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 264 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    if (_DML_M_b__hard_reset(_dev))
    #line 264 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 1;
    #line 1213 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1213 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 2068 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

/* b.hard_reset */
static bool _DML_M_b__hard_reset(test_t *_dev)
#line 1211 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
{
    #line 1213 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
    return 0;
    #line 1213 "C:\\\\Users\\\\nagen\\\\simics-projects\\\\my-intel-simics-project-1\\\\win64\\\\bin\\\\dml\\\\1.2\\\\dml-builtins.dml"
}
#line 2078 "C:\\Users\\nagen\\simics-projects\\my-intel-simics-project-1\\logs\\test\\win64\\modules\\dmlc\\test\\scratch\\1.2\\errors\\EBADFAIL_dml12\\T_EBADFAIL_dml12.c"

conf_class_t *
_initialize_T_EBADFAIL_dml12(void)
{

    const class_info_t funcs = {
        .alloc = test_alloc,
        .init = test_init,
        .finalize = test_finalize,
        .objects_finalized = test_objects_finalized,
        .dealloc = test_dealloc,
        .description = "test device",
    };

    conf_class_t *class = SIM_create_class("test", &funcs);
    _dev_class = class;
    if (SIM_clear_exception() != SimExc_No_Exception) {
        fprintf(stderr, "Failed to register class test: %s\n", SIM_last_error());
        return NULL;
    }

    _initialize_traits();
    _initialize_identity_ht();
    _initialize_vtable_hts();
    _initialize_typeseq_after_on_hook_hts();
    _register_events(class);
    _port_class_b = _register_port_class("test.b", NULL, NULL);
    SIM_register_port(class, "bank.b", _port_class_b, NULL);
    _port_class_p = _register_port_class("test.p", NULL, NULL);
    SIM_register_port(class, "port.p", _port_class_p, NULL);
    _DML_register_attribute(class, "a", get_a, NULL, set_a, NULL, Sim_Attr_Optional|Sim_Attr_Internal, "i", "Undocumented");
    {
        static const bank_instrumentation_subscribe_interface_t bank_instrumentation_subscribe_interface = {
        .disable_connection_callbacks = &_DML_PIFACE_b__bank_instrumentation_subscribe__disable_connection_callbacks,
        .enable_connection_callbacks = &_DML_PIFACE_b__bank_instrumentation_subscribe__enable_connection_callbacks,
        .register_after_read = &_DML_PIFACE_b__bank_instrumentation_subscribe__register_after_read,
        .register_after_write = &_DML_PIFACE_b__bank_instrumentation_subscribe__register_after_write,
        .register_before_read = &_DML_PIFACE_b__bank_instrumentation_subscribe__register_before_read,
        .register_before_write = &_DML_PIFACE_b__bank_instrumentation_subscribe__register_before_write,
        .remove_callback = &_DML_PIFACE_b__bank_instrumentation_subscribe__remove_callback,
        .remove_connection_callbacks = &_DML_PIFACE_b__bank_instrumentation_subscribe__remove_connection_callbacks,
    };
        SIM_register_interface(_port_class_b, "bank_instrumentation_subscribe", &bank_instrumentation_subscribe_interface);
        static const bank_instrumentation_subscribe_interface_t port_iface = {
        .disable_connection_callbacks = &_DML_IFACE_b__bank_instrumentation_subscribe__disable_connection_callbacks,
        .enable_connection_callbacks = &_DML_IFACE_b__bank_instrumentation_subscribe__enable_connection_callbacks,
        .register_after_read = &_DML_IFACE_b__bank_instrumentation_subscribe__register_after_read,
        .register_after_write = &_DML_IFACE_b__bank_instrumentation_subscribe__register_after_write,
        .register_before_read = &_DML_IFACE_b__bank_instrumentation_subscribe__register_before_read,
        .register_before_write = &_DML_IFACE_b__bank_instrumentation_subscribe__register_before_write,
        .remove_callback = &_DML_IFACE_b__bank_instrumentation_subscribe__remove_callback,
        .remove_connection_callbacks = &_DML_IFACE_b__bank_instrumentation_subscribe__remove_connection_callbacks,
    };
        SIM_register_port_interface(class, "bank_instrumentation_subscribe", &port_iface, "b", NULL);
    }
    {
        static const instrumentation_order_interface_t instrumentation_order_interface = {
        .get_connections = &_DML_PIFACE_b__instrumentation_order__get_connections,
        .move_before = &_DML_PIFACE_b__instrumentation_order__move_before,
    };
        SIM_register_interface(_port_class_b, "instrumentation_order", &instrumentation_order_interface);
        static const instrumentation_order_interface_t port_iface = {
        .get_connections = &_DML_IFACE_b__instrumentation_order__get_connections,
        .move_before = &_DML_IFACE_b__instrumentation_order__move_before,
    };
        SIM_register_port_interface(class, "instrumentation_order", &port_iface, "b", NULL);
    }
    {
        static const int_register_interface_t int_register_interface = {
        .all_registers = &_DML_PIFACE_b__int_register__all_registers,
        .get_name = &_DML_PIFACE_b__int_register__get_name,
        .get_number = &_DML_PIFACE_b__int_register__get_number,
        .read = &_DML_PIFACE_b__int_register__read,
        .register_info = &_DML_PIFACE_b__int_register__register_info,
        .write = &_DML_PIFACE_b__int_register__write,
    };
        SIM_register_interface(_port_class_b, "int_register", &int_register_interface);
        static const int_register_interface_t port_iface = {
        .all_registers = &_DML_IFACE_b__int_register__all_registers,
        .get_name = &_DML_IFACE_b__int_register__get_name,
        .get_number = &_DML_IFACE_b__int_register__get_number,
        .read = &_DML_IFACE_b__int_register__read,
        .register_info = &_DML_IFACE_b__int_register__register_info,
        .write = &_DML_IFACE_b__int_register__write,
    };
        SIM_register_port_interface(class, "int_register", &port_iface, "b", NULL);
    }
    {
        static const io_memory_interface_t io_memory_interface = {
        .operation = &_DML_PIFACE_b__io_memory__operation,
    };
        SIM_register_interface(_port_class_b, "io_memory", &io_memory_interface);
        static const io_memory_interface_t port_iface = {
        .operation = &_DML_IFACE_b__io_memory__operation,
    };
        SIM_register_port_interface(class, "io_memory", &port_iface, "b", NULL);
    }
    {
        static const register_view_interface_t register_view_interface = {
        .big_endian_bitorder = &_DML_PIFACE_b__register_view__big_endian_bitorder,
        .description = &_DML_PIFACE_b__register_view__description,
        .get_register_value = &_DML_PIFACE_b__register_view__get_register_value,
        .number_of_registers = &_DML_PIFACE_b__register_view__number_of_registers,
        .register_info = &_DML_PIFACE_b__register_view__register_info,
        .set_register_value = &_DML_PIFACE_b__register_view__set_register_value,
    };
        SIM_register_interface(_port_class_b, "register_view", &register_view_interface);
        static const register_view_interface_t port_iface = {
        .big_endian_bitorder = &_DML_IFACE_b__register_view__big_endian_bitorder,
        .description = &_DML_IFACE_b__register_view__description,
        .get_register_value = &_DML_IFACE_b__register_view__get_register_value,
        .number_of_registers = &_DML_IFACE_b__register_view__number_of_registers,
        .register_info = &_DML_IFACE_b__register_view__register_info,
        .set_register_value = &_DML_IFACE_b__register_view__set_register_value,
    };
        SIM_register_port_interface(class, "register_view", &port_iface, "b", NULL);
    }
    {
        static const register_view_catalog_interface_t register_view_catalog_interface = {
        .register_names = &_DML_PIFACE_b__register_view_catalog__register_names,
        .register_offsets = &_DML_PIFACE_b__register_view_catalog__register_offsets,
    };
        SIM_register_interface(_port_class_b, "register_view_catalog", &register_view_catalog_interface);
        static const register_view_catalog_interface_t port_iface = {
        .register_names = &_DML_IFACE_b__register_view_catalog__register_names,
        .register_offsets = &_DML_IFACE_b__register_view_catalog__register_offsets,
    };
        SIM_register_port_interface(class, "register_view_catalog", &port_iface, "b", NULL);
    }

    const char *const log_groups[] = {
        "Register_Read",
        "Register_Write",
        NULL
    };
    SIM_log_register_groups(class, log_groups);
    SIM_log_register_groups(_port_class_b, log_groups);
    SIM_log_register_groups(_port_class_p, log_groups);

    _startup_calls();
    return class;
}

static void _initialize_vtable_hts(void)
{
}
static void __attribute__((optimize("O0")))
_tinit_object(struct _object *_ret)
{
}
static void __attribute__((optimize("O0")))
_tinit_t(struct _t *_ret)
{
}
static void __attribute__((optimize("O0"))) _initialize_traits0(void)
{
    _tinit_object(&_tr__dev__object);
    _tinit_object(&_tr_a__object);
    _tinit_object(&_tr_b__object);
    _tinit_object(&_tr_b_bank_instrumentation_subscribe__object);
    _tinit_object(&_tr_b_instrumentation_order__object);
    _tinit_object(&_tr_b_int_register__object);
    _tinit_object(&_tr_b_io_memory__object);
    _tinit_object(&_tr_b_register_view__object);
    _tinit_object(&_tr_b_register_view_catalog__object);
    _tinit_object(&_tr_p__object);
    _tinit_t(&_tr_p__t);
}
static void __attribute__((optimize("O0"))) _initialize_traits(void)
{
    _initialize_traits0();
}
static const _vtable_list_t *const _each__t UNUSED = NULL;
static const _vtable_list_t *const _each__object UNUSED = NULL;
static const _vtable_list_t *const _each__methods_dml14 UNUSED = NULL;
static void _initialize_typeseq_after_on_hook_hts(void)
{
}
static attr_value_t _simple_event_only_domains_get_value(conf_object_t *_obj, lang_void *data)
{
    return _serialize_simple_event_data(0, NULL, _id_infos, (_simple_event_data_t *)data);
}

static lang_void *_simple_event_only_domains_set_value(conf_object_t *_obj, attr_value_t val)
{
    _simple_event_data_t *out;
    set_error_t error = _deserialize_simple_event_data(NULL, 0, 0, NULL, &_id_info_ht, val, &out);
    if (error != Sim_Set_Ok) {
        out = NULL;
    }
    return out;
}

static void _cancel_simple_delay_events(conf_object_t *_obj, conf_object_t *_clock, const _identity_t *_domain)
{
    int (*_pred)(lang_void *, lang_void *) UNUSED = _domain ? _simple_event_predicate : NULL;
}
static void _cancel_simple_events(conf_object_t *_obj, _identity_t _domain)
{
    test_t *_dev UNUSED = (test_t*)_obj;
    if (!SIM_marked_for_deletion(_obj) && SIM_object_clock(_obj)) {
        _cancel_simple_delay_events(_obj, SIM_object_clock(_obj), &_domain);
        _cancel_simple_delay_events(_obj, SIM_picosecond_clock(_obj), &_domain);
    }
    _DML_cancel_afters_in_detached_hook_queues(_dev->_detached_hook_queue_stack, _domain);
}

static void _initialize_identity_ht(void)
{
    ht_insert_str(&_id_info_ht, "test", &_id_infos[0]);
    for (uint64 i = 0; i < 10; ++i) {
        ht_insert_str(&_id_info_ht, _id_infos[i].logname, &_id_infos[i]);
    }
}
static void _register_events(conf_class_t *class)
{
    return;
}

static void _init_port_objs(test_t *_dev)
{
    _dev->b._obj = _init_port_object(&_dev->obj, "bank.b", 0, NULL);
    _dev->p._obj = _init_port_object(&_dev->obj, "port.p", 0, NULL);
}
static void _init_static_vars(test_t *_dev)
{
}

// DML serialization functions
static UNUSED bool hard_reset(test_t *_dev)
{
    return _DML_M_hard_reset(_dev);
}
static UNUSED bool soft_reset(test_t *_dev)
{
    return _DML_M_soft_reset(_dev);
}

