/*
  Â© 2025 Intel Corporation

  This software and the related documents are Intel copyrighted materials, and
  your use of them is governed by the express license under which they were
  provided to you ("License"). Unless the License provides otherwise, you may
  not use, modify, copy, publish, distribute, disclose or transmit this software
  or the related documents without Intel's prior written permission.

  This software and the related documents are provided as is, with no express or
  implied warranties, other than those that are expressly stated in the License.
*/

dml 1.4;

header %{
#include <simics\util\frags.h>
%}

import "simics/base-types.dml";
import "simics/util/alloc.dml";
import "simics/util/help-macros.dml";
import "simics/util/swabber.dml";

extern void frags_add(frags_t *buf, void const *data, size_t len);
extern void frags_add_from_frags(frags_t *dst, frags_t const *src, size_t offset, size_t len);
extern void frags_extract(frags_t const *buf, void *vdst);
extern uint8 frags_extract_8(frags_t const *buf, size_t offset);
extern void *frags_extract_alloc(frags_t const *buf);
extern uint16 frags_extract_be16(frags_t const *buf, size_t offset);
extern uint32 frags_extract_be32(frags_t const *buf, size_t offset);
extern uint64 frags_extract_be64(frags_t const *buf, size_t offset);
extern uint16 frags_extract_le16(frags_t const *buf, size_t offset);
extern uint32 frags_extract_le32(frags_t const *buf, size_t offset);
extern uint64 frags_extract_le64(frags_t const *buf, size_t offset);
extern void frags_extract_slice(frags_t const *buf, void *vdst, size_t offset, size_t len);
extern void *frags_extract_slice_alloc(frags_t const *buf, size_t offset, size_t len);
extern void frags_init(frags_t *buf);
extern void frags_init_add(frags_t *buf, void const *data, size_t len);
extern void frags_init_add_from_frags(frags_t *dst, frags_t const *src, size_t offset, size_t len);
extern frags_it_t frags_it(frags_t const *buf, size_t offset, size_t len);
extern uint8 const *frags_it_data(frags_it_t it);
extern bool frags_it_end(frags_it_t it);
extern size_t frags_it_len(frags_it_t it);
extern frags_it_t frags_it_next(frags_it_t it);
extern size_t frags_len(frags_t const *buf);
extern frags_t frags_prefix(void const *header, size_t header_len, frags_t const *body);
extern frags_t frags_suffix(frags_t const *body, void *header, size_t header_len);
extern typedef struct { size_t len; uint32 nfrags; frags_frag_t fraglist[8]; } frags_t;
extern typedef struct { frags_frag_t const *frag; size_t skip; size_t left; } frags_it_t;
extern typedef struct { uint8 const *start; size_t len; } frags_frag_t;
